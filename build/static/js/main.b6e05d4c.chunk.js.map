{"version":3,"sources":["components/Home.jsx","components/contexts/UserContext.js","components/common/NavBar.jsx","storemini/api.js","storemini/reducers/user.js","components/common/SideNavBar.jsx","components/common/ColorPickerInput.js","components/common/TagComponent.jsx","components/common/Variant.jsx","components/common/MediaComponent.js","components/contexts/categoryContext.js","components/addProductComponent.jsx","components/common/Pagination.jsx","utils/paginate.js","utils/sort.js","utils/filter.js","storemini/reducers/products.js","components/ShowProducts.jsx","components/Login.jsx","storemini/reducers/order.js","components/Orders.jsx","components/NotFound.jsx","services/httpservice.js","services/reviewServices.js","services/UsersService.js","storemini/reducers/staff.js","components/Staff.jsx","components/Categories.jsx","services/authService.js","services/productServices.js","components/OrderDetail.jsx","services/categoryService.js","components/Profile.jsx","components/Reviews.jsx","services/orderServices.js","components/Transactions.jsx","components/ResetPassword.jsx","components/Forgot.jsx","services/basketService.js","components/Baskets.jsx","components/UpdatePassword.jsx","components/AddUser.jsx","storemini/reducers/customers.js","components/Customers.jsx","components/EditProduct.jsx","components/Main.jsx","storemini/middleware/api.js","storemini/middleware/logger.js","storemini/middleware/toastify.js","storemini/reducers/reviews.js","storemini/reducers/cart.js","storemini/reducers/categories.js","storemini/entities.js","storemini/reducer.js","App.js","storemini/configureStore.js","reportWebVitals.js","index.js"],"names":["Home","class","UserContext","React","createContext","NavBar","user","useContext","style","display","href","id","src","alt","name","to","onClick","localStorage","clear","window","location","toast","success","position","POSITION","TOP_CENTER","apiCallBegan","createAction","apiCallSuccess","apiCallFailed","slice","createSlice","initialState","data","loading","lastFetch","reducers","userRequested","action","userReceived","payload","Date","now","userRequestFailed","userAddressAdded","actions","getUserSelector","createSelector","state","entities","SideNavBar","dispatch","useDispatch","useSelector","useEffect","getState","moment","diff","url","onStart","type","onSuccess","onError","className","role","ColorPicker","displayColorPicker","color","qty","handleClick","setState","tag","props","text","hex","setText","handleClose","handleChange","component","console","log","styles","reactCSS","width","height","borderRadius","background","this","swatch","padding","boxShadow","cursor","popover","zIndex","cover","top","right","bottom","left","onChange","Component","ColorPickerInput","useState","tags","setTags","map","picker","targetIndex","findIndex","item","sendTags","sendTag","e","temp","length","preventDefault","delimiters","Tags","handleDelete","bind","handleAddition","handleDrag","i","filter","index","toString","currPos","newPos","splice","ReactTags","Variants","addOption","dataItem","variantsData","selectedOption","hasVariant","addData","scroll","sendVariantsData","htmlFor","imgList","VariantsDataComponent","OptionComponent","onChangeHandler","target","value","saveData","VariantsPreview","variant","varObject","VariantImgSelect","tagID","find","img","onQuantityChangeHandler","startsWith","ntcjs","placeholder","min","Media","pictures","setPictures","picturesNameList","setPicturesNameList","namearr","pic","push","setImages","setImagesList","withPreview","withIcon","picture","imgExtension","maxFileSize","CategoryContext","AddProduct","addProduct","description","setDescription","setImgList","images","setVariantsData","categories","deleteSubCategoryHandler","createSubCategoryHandler","parent","setParent","children","setChildren","child","setChild","formik","useFormik","initialValues","title","price","category","costPerItem","chargeTax","stockKeepingUnit","barcode","trackQuantity","shipping","availableQuantity","physicalProduct","weight","variants","validationSchema","Yup","onSubmit","values","form","FormData","imgNames","forEach","append","handleSubmit","getFieldProps","touched","errors","cate","subCategories","editor","ClassicEditor","event","getData","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","paginate","items","pageNumber","startIndex","take","sortBy","path","orderBy","filterByPrice","pr","list","editProduct","filtered","pagination","sort","priceFilter","productsRequested","products","productsReceived","productsRequestFailed","pageChanged","productsSorted","priceFiltered","editProductAdded","getEditProductSelector","Products","addEditProductHandler","product","addEditProduct","history","loadProducts","DropdownButton","alignRight","onSelect","filterPrice","Dropdown","Item","eventKey","sortProducts","scope","visible","for","process","quantity","sold","createdAt","substring","changePage","connect","selected","loginSchema","shape","username","required","label","password","Login","onLogin","setRole","detailedOrder","ordersRequested","orders","ordersReceived","ordersRequestFailed","ordersSorted","detailedOrderAdded","Orders","order","addDetailedOrderHandler","addDetailedOrder","loadOrders","sortOrders","guest","charges","status","total","payment","charge","amount","NotFound","token","getItem","axios","defaults","headers","common","interceptors","response","use","error","Promise","reject","get","post","patch","delete","getAllReviews","http","updateReview","favorite","addUser","email","contactNo","passwordConfirm","deleteUser","getMe","staffRequested","staff","staffReceived","staffRequestFailed","staffAddressAdded","getStaffSelector","Staff","onDeleteHandler","a","rev","_id","Categories","count","subCate","subCategory","login","forgotPassword","resetPassword","confirmPassword","updatePassword","passwordCurrent","currentPassword","newPassword","confirmNewPassword","getAllProducts","deleteProduct","addNewProduct","addNewProductImages","OrderDetail","addVariants","filterTags","variantsArray","errorArray","orderProduct","selectedVariants","orderVar","productVar","variantType","option","tempTag","setStatus","onchangeStatusHandler","warn","changeOrderStatus","tabindex","address","province","city","zip","area","prod","veri","totalProductPrice","marginLeft","subtotal","paid","payment_method_details","card","brand","last4","method","getAllCategories","createSubCategory","trim","deleteSubCategory","Profile","me","profileSchema","successMessage","errorMessage","image","readOnly","Reviews","reviews","setReviews","getAllReviewsHandler","review","onselectHandler","preReviews","checked","rating","Transactions","setOrderForDetail","ResetPassword","onResetPassword","match","params","forgotSchema","Forgot","onForgot","getAllBaskets","deleteBasket","addNewBasket","updateBasket","basketSchema","Baskets","setImage","baskets","setBaskets","getAllBasketsHandler","imageHandler","basket","preBaskets","addNewBasketHandler","buttonText","singleImage","passwordSchema","UpdatePassword","updatePasswordHandler","AddUser","useHistory","userSchema","max","addUserHandler","customersRequested","customer","customersReceived","customerRequestFailed","customerAddressAdded","getAllCustomersSelector","customers","Customers","EditProduct","split","sellOutofStock","defaultValue","Main","setUser","setProducts","setCategories","getAllProductHandler","getMeHandler","getAllCategoriesHandler","loginHandler","setItem","forgotHandler","message","addProductHandler","newProduct","allCates","requiredSubCates","sub","all","deleteProductHandler","remainProd","pro","resetPasswordHandler","setTimeout","Provider","exact","render","ShowProducts","api","next","request","baseURL","closeOnClick","scrollTo","cust","logger","param","store","alert","productReviews","reviewsRequested","reviewsReceived","reviewsRequestFailed","reviewAdded","productReviewsAdded","productsReviews","numberOfItems","bucket","checkout","itemAdded","cart","cartRequested","cartReceived","cartRequestFailed","quantityChanged","reduce","acc","obj","itemRemoved","bucketAdded","shippingAdded","paymentAdded","itemAssignedToUser","categoriesRequested","categoriesReceived","categoriesRequestFailed","categoryAdded","categorySated","combineReducers","entitiesReducer","configureStore","reducer","middleware","getDefaultMiddleware","destination","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e05d4c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Home() {\r\n\r\n    return (\r\n\r\n        <main class=\"content\">\r\n            <div class=\"container-fluid p-0\">\r\n                <h1 class=\"h3 mb-3\"><strong>Analytics</strong> Dashboard</h1>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-12 col-xxl-5 d-flex\">\r\n                        <div class=\"w-100\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col mt-0\">\r\n                                                    <h5 class=\"card-title\">Sales</h5>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-auto\">\r\n                                                    <div class=\"stat text-primary\">\r\n                                                        <i class=\"align-middle\" data-feather=\"truck\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h1 class=\"mt-1 mb-3\">2.382</h1>\r\n                                            <div class=\"mb-0\">\r\n                                                <span class=\"text-danger\"> <i\r\n                                                    class=\"mdi mdi-arrow-bottom-right\"></i> -3.65% </span>\r\n                                                <span class=\"text-muted\">Since last week</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col mt-0\">\r\n                                                    <h5 class=\"card-title\">Visitors</h5>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-auto\">\r\n                                                    <div class=\"stat text-primary\">\r\n                                                        <i class=\"align-middle\" data-feather=\"users\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h1 class=\"mt-1 mb-3\">14.212</h1>\r\n                                            <div class=\"mb-0\">\r\n                                                <span class=\"text-success\"> <i\r\n                                                    class=\"mdi mdi-arrow-bottom-right\"></i> 5.25% </span>\r\n                                                <span class=\"text-muted\">Since last week</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col mt-0\">\r\n                                                    <h5 class=\"card-title\">Earnings</h5>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-auto\">\r\n                                                    <div class=\"stat text-primary\">\r\n                                                        <i class=\"align-middle\" data-feather=\"dollar-sign\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h1 class=\"mt-1 mb-3\">$21.300</h1>\r\n                                            <div class=\"mb-0\">\r\n                                                <span class=\"text-success\"> <i\r\n                                                    class=\"mdi mdi-arrow-bottom-right\"></i> 6.65% </span>\r\n                                                <span class=\"text-muted\">Since last week</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col mt-0\">\r\n                                                    <h5 class=\"card-title\">Orders</h5>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-auto\">\r\n                                                    <div class=\"stat text-primary\">\r\n                                                        <i class=\"align-middle\" data-feather=\"shopping-cart\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h1 class=\"mt-1 mb-3\">64</h1>\r\n                                            <div class=\"mb-0\">\r\n                                                <span class=\"text-danger\"> <i\r\n                                                    class=\"mdi mdi-arrow-bottom-right\"></i> -2.25% </span>\r\n                                                <span class=\"text-muted\">Since last week</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </main>\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\nexport  const UserContext= React.createContext();","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nexport default function NavBar() {\r\n    const { user } = useContext(UserContext);\r\n    const logoutHandler=()=>{\r\n        localStorage.clear();\r\n        window.location='/';\r\n        toast.success(\"Your are successfully logout\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n    }\r\n    return (\r\n        <div  style={{display:user?'contents':'none'}}>\r\n        <nav class=\"navbar navbar-expand navbar-light navbar-bg\">\r\n        <a class=\"sidebar-toggle js-sidebar-toggle\">\r\n            <i class=\"hamburger align-self-center\"></i> \r\n        </a>\r\n        <div class=\"navbar-collapse collapse\">\r\n            <ul class=\"navbar-nav navbar-align\">\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-icon dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" data-bs-toggle=\"dropdown\">\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-lg dropdown-menu-end py-0\"\r\n                        aria-labelledby=\"alertsDropdown\">\r\n                        <div class=\"dropdown-menu-header\">\r\n                            4 New Notifications\r\n                        </div>\r\n                        <div class=\"list-group\">\r\n                            <a href=\"#\" class=\"list-group-item\">\r\n                                <div class=\"row g-0 align-items-center\">\r\n                                    <div class=\"col-2\">\r\n                                        <i class=\"text-danger\" data-feather=\"alert-circle\"></i>\r\n                                    </div>\r\n                                    <div class=\"col-10\">\r\n                                        <div class=\"text-dark\">Update completed</div>\r\n                                        <div class=\"text-muted small mt-1\">Restart server 12 to complete the\r\n                                            update.</div>\r\n                                        <div class=\"text-muted small mt-1\">30m ago</div>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" class=\"list-group-item\">\r\n                                <div class=\"row g-0 align-items-center\">\r\n                                    <div class=\"col-2\">\r\n                                        <i class=\"text-warning\" data-feather=\"bell\"></i>\r\n                                    </div>\r\n                                    <div class=\"col-10\">\r\n                                        <div class=\"text-dark\">Lorem ipsum</div>\r\n                                        <div class=\"text-muted small mt-1\">Aliquam ex eros, imperdiet vulputate\r\n                                            hendrerit et.</div>\r\n                                        <div class=\"text-muted small mt-1\">2h ago</div>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" class=\"list-group-item\">\r\n                                <div class=\"row g-0 align-items-center\">\r\n                                    <div class=\"col-2\">\r\n                                        <i class=\"text-primary\" data-feather=\"home\"></i>\r\n                                    </div>\r\n                                    <div class=\"col-10\">\r\n                                        <div class=\"text-dark\">Login from 192.186.1.8</div>\r\n                                        <div class=\"text-muted small mt-1\">5h ago</div>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" class=\"list-group-item\">\r\n                                <div class=\"row g-0 align-items-center\">\r\n                                    <div class=\"col-2\">\r\n                                        <i class=\"text-success\" data-feather=\"user-plus\"></i>\r\n                                    </div>\r\n                                    <div class=\"col-10\">\r\n                                        <div class=\"text-dark\">New connection</div>\r\n                                        <div class=\"text-muted small mt-1\">Christina accepted your request.\r\n                                        </div>\r\n                                        <div class=\"text-muted small mt-1\">14h ago</div>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"dropdown-menu-footer\">\r\n                            <a href=\"#\" class=\"text-muted\">Show all notifications</a>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-icon dropdown-toggle\" href=\"/\" id=\"messagesDropdown\"\r\n                        data-bs-toggle=\"dropdown\">\r\n                    <a class=\"nav-icon dropdown-toggle\" href=\"#\" id=\"messagesDropdown\"\r\n                        data-bs-toggle=\"dropdown \">\r\n                        <div class=\"position-relative\">\r\n                            {/* <i class=\"align-middle\" data-feather=\"message-square\"></i> */}\r\n                        </div>\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-lg dropdown-menu-end py-0\"\r\n                        aria-labelledby=\"messagesDropdown\">\r\n                       \r\n                        <div class=\"list-group\">\r\n                        </div>\r\n                        <div class=\"dropdown-menu-footer\">\r\n                            <a href=\"/\" class=\"text-muted\">Show all messages</a>\r\n                        </div>\r\n                    </div>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"/\"\r\n                        data-bs-toggle=\"dropdown\">\r\n\r\n                    </a>\r\n                    <a class=\"nav-link dropdown-toggle d-none d-sm-inline-block\" href=\"/\"\r\n                        data-bs-toggle=\"dropdown\">\r\n                        <img src=\"https://zeebraline.com/img/noimg.png\" class=\"avatar img-fluid rounded me-1\"\r\n                            alt=\"Charles Hall\" />\r\n                        <span class=\"text-dark\">{user?.name}</span>\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-end\">\r\n                        <Link class=\"dropdown-item\" to=\"/profile\">\r\n                            <i class=\"align-middle me-1\"\r\n                            data-feather=\"user\"></i> Profile</Link>\r\n                       \r\n                        <div class=\"dropdown-divider\"></div>\r\n                        <Link class=\"dropdown-item\" to=\"/updatePassword\">\r\n                        <i class=\"fas fa-lock m-2\"></i>change Password</Link>\r\n                        <div class=\"dropdown-divider\"></div>\r\n\r\n                        <a class=\"dropdown-item\" onClick={()=>logoutHandler('')} href=\"/login\">\r\n                        <i class=\"fas fa-sign-out-alt m-2\"></i>\r\n                            Log out\r\n                            </a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n    </div>\r\n    )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const apiCallBegan = createAction('api/callBegan');\r\nexport const apiCallSuccess = createAction('api/callSuccess');\r\nexport const apiCallFailed = createAction('api/callFailed');\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"../api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    data: {},\r\n    loading: false,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    userRequested: (user, action) => {\r\n      user.loading = true;\r\n    },\r\n    userReceived: (user, action) => {\r\n      user.data = action.payload;\r\n      user.loading = false;\r\n      user.lastFetch = Date.now();\r\n    },\r\n    userRequestFailed: (user, action) => {\r\n      user.loading = false;\r\n    },\r\n    userAddressAdded: (user, action) => {\r\n      user.data = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { userReceived, userRequested, userRequestFailed, userAddressAdded } =\r\n  slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.user;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url: \"user/me\",\r\n      onStart: userRequested.type,\r\n      onSuccess: userReceived.type,\r\n      onError: userRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n// export const login = (data) => (dispatch, getState) => {\r\n//   dispatch(\r\n//     apiCallBegan({\r\n//       url: \"user/addAddress\",\r\n//       method: \"post\",\r\n//       data,\r\n//       message: \"log in successfully !!!\",\r\n//       onStart: userRequested.type,\r\n//       onSuccess: userReceived.type,\r\n//       onError: userRequestFailed.type,\r\n//     })\r\n//   );\r\n// };\r\n\r\nexport const updateMe = (data) => (dispatch, getState) => {\r\n  dispatch(\r\n    apiCallBegan({\r\n      url: \"user/updateMe\",\r\n      method: \"patch\",\r\n      data,\r\n      successMessage: \" Profile  successfully  updated!!!\",\r\n      errorMessage: \" Something went Wrong  !!!\",\r\n      onSuccess: userReceived.type,\r\n      onError: userRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n// Selector\r\nexport const getUserSelector = createSelector(\r\n  (state) => state.entities.user.data,\r\n  (user) => user\r\n);\r\nexport const getLoadingSelector = createSelector(\r\n  (state) => state.entities.user.loading,\r\n  (loading) => loading\r\n);\r\n\r\n// export const getuserByUser = (userId) =>\r\n//   createSelector(\r\n//     (state) => state.entities.user.data,\r\n//     (user) => user.filter((item) => item.userId === userId)\r\n//   );\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport { getUserSelector, loadUser } from '../../storemini/reducers/user';\r\nimport { UserContext } from '../contexts/UserContext';\r\nconst logoutHandler = () => {\r\n    localStorage.clear();\r\n    window.location = '/';\r\n    toast.success(\"Your are successfully logout\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n    });\r\n}\r\nexport default function SideNavBar() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(getUserSelector);\r\n    useEffect(() => {\r\n        dispatch(loadUser());\r\n    }, [])\r\n    return (\r\n        <div style={{ display: user ? 'contents' : 'none' }}>\r\n            {/* {user && */}\r\n            <nav id=\"sidebar\" className=\"sidebar js-sidebar\">\r\n                <div className=\"sidebar-content js-simplebar\">\r\n                    <a className=\"sidebar-brand\" href=\"/\">\r\n                        <span className=\"align-middle\">MiniGo</span>\r\n                    </a>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-item active\">\r\n                            <Link className=\"sidebar-link\" to=\"/\">\r\n                                <i className=\"align-middle\" data-feather=\"home\"></i> <span className=\"align-middle\">Dashboard</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"sidebar-item \">\r\n                            <a data-bs-target=\"#Product\" data-bs-toggle=\"collapse\" className=\"sidebar-link\">\r\n                                <i className=\"align-middle\" data-feather=\"shopping-bag\"></i> <span\r\n                                    className=\"align-middle\">Product</span>\r\n                            </a>\r\n                            <ul id=\"Product\" className=\"sidebar-dropdown collapse\" data-bs-parent=\"#sidebar\">\r\n\r\n                                <li className=\"sidebar-item\"><Link className=\"sidebar-link\" to=\"/showProduct\">All Products</Link></li>\r\n                                <li className=\"sidebar-item\"><Link className=\"sidebar-link\" to=\"/categories\">Categories</Link></li>\r\n                                {/* <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">P2</a></li>\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">P3</a></li> */}\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"sidebar-item\">\r\n                            {/* <Link to='/order' data-bs-target=\"#Order\" data-bs-toggle=\"collapse\" className=\"sidebar-link\">\r\n                    <i className=\"align-middle\" data-feather=\"shopping-cart\"></i> <span className=\"align-middle\">Order</span>\r\n                </Link> */}\r\n                            <Link className=\"sidebar-link\" to=\"/orders\">\r\n                                <i class=\"fas fa-shopping-cart\"></i> <span className=\"align-middle\">Orders</span>\r\n                            </Link>\r\n                            {/* <ul id=\"Order\" className=\"sidebar-dropdown collapse\" data-bs-parent=\"#sidebar\">\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">Order 1</a></li>\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">Order 2</a></li>\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">Order 3</a></li>\r\n                </ul> */}\r\n                        </li>\r\n                        {user?.role === 'admin' && <li className=\"sidebar-item\">\r\n                            <Link className=\"sidebar-link\" to=\"/staff\">\r\n                                <i class=\"fas fa-users\"></i> <span className=\"align-middle\">Staff</span>\r\n                            </Link>\r\n                        </li>}\r\n                        <li className=\"sidebar-item\">\r\n                            <a data-bs-target=\"#AddProduct\" data-bs-toggle=\"collapse\" className=\"sidebar-link\">\r\n                                <i class=\"fas fa-user-plus\"></i> <span className=\"align-middle\">Add\r\n                                    product</span>\r\n                            </a>\r\n                            <ul id=\"AddProduct\" className=\"sidebar-dropdown collapse\" data-bs-parent=\"#sidebar\">\r\n                                <li className=\"sidebar-item\"><Link className=\"sidebar-link\" to=\"/addProduct\">Add Product</Link></li>\r\n                            </ul>\r\n                        </li>\r\n                        {/* <li className=\"sidebar-item\">\r\n                                <a data-bs-target=\"#Transactions\" data-bs-toggle=\"collapse\" className=\"sidebar-link\">\r\n                                    <i className=\"align-middle\" data-feather=\"dollar-sign\"></i>\r\n                                     <Link  to='/transactions' className=\"align-middle\">Transactions</Link>\r\n                                </a> */}\r\n                        {/* <ul id=\"Transactions\" className=\"sidebar-dropdown collapse\" data-bs-parent=\"#sidebar\">\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">Transaction 1</a></li>\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">Transaction 2</a></li>\r\n                    <li className=\"sidebar-item\"><a className=\"sidebar-link\" href=\"#\">Transaction 3</a></li>\r\n                </ul> */}\r\n                        {/* </li> */}\r\n                        {user?.role === 'admin' && (\r\n                            <li className=\"sidebar-item\">\r\n                                <Link className=\"sidebar-link\" to=\"/transactions\">\r\n                                    <i className=\"align-middle\" data-feather=\"dollar-sign\"></i> <span\r\n                                        className=\"align-middle\">Transaction</span>\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                        {user?.role === 'admin' && (\r\n\r\n                            <li className=\"sidebar-item\">\r\n                                <Link className=\"sidebar-link\" to=\"/reviews\">\r\n                                    <i className=\"align-middle\" data-feather=\"align-justify\"></i> <span\r\n                                        className=\"align-middle\">Reviews</span>\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n\r\n                        <li className=\"sidebar-item\">\r\n                            <Link className=\"sidebar-link\" to=\"/basket\">\r\n                                {/* <i className=\"align-middle\" data-feather=\"align-justify\"></i> */}\r\n                                <i class=\"fas fa-shopping-basket\"></i>\r\n                                <span\r\n                                    className=\"align-middle\">Baskets</span>\r\n                            </Link>\r\n                        </li>\r\n                        {user?.role === 'admin' && (\r\n                            <li className=\"sidebar-item\">\r\n                                <Link className=\"sidebar-link\" to=\"/customers\">\r\n                                    {/* <i className=\"align-middle\" data-feather=\"align-justify\"></i> */}\r\n                                    <i class=\"fas fa-users\"></i>                                     <span\r\n                                        className=\"align-middle\">Customers</span>\r\n                                </Link>\r\n                            </li>)\r\n                        }\r\n                        {/* <li className=\"sidebar-item\">\r\n                                <Link className=\"sidebar-link\" to=\"/profile\">\r\n                                    <i className=\"align-middle\" data-feather=\"user\"></i> <span className=\"align-middle\">Profile</span>\r\n                                </Link>\r\n                            </li> */}\r\n\r\n                        {/* <li className=\"sidebar-item\">\r\n                                <a className=\"sidebar-link\" href=\"/login\">\r\n                                    <i className=\"align-middle\" data-feather=\"log-in\"></i> <span className=\"align-middle\">Sign In</span>\r\n                                </a>\r\n                            </li> */}\r\n\r\n\r\n                        <li className=\"sidebar-item\" onClick={() => logoutHandler('')}>\r\n                            <Link className=\"sidebar-link\" href=\"/\">\r\n                                <i class=\"fas fa-sign-out-alt\"></i> <span className=\"align-middle\">Logout</span>\r\n                            </Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n            {/* } */}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import reactCSS from 'reactcss'\r\nimport React, { useState } from 'react'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPickerInput = props => {\r\n    const [tags, setTags] = useState([{ id: 1, text: '' }])\r\n    const sendTag = (tag) => {\r\n        let targetIndex=tags.findIndex(item => item.id === tag.id);\r\n        tags[targetIndex].text = tag.text;\r\n        props.sendTags(tags)\r\n    }\r\n    const addColor = (e) => {\r\n        const temp = {};\r\n        temp.id = (tags.length + 1);\r\n        temp.text = ''\r\n        setTags([...tags, temp])\r\n        e.preventDefault();\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            {\r\n                tags.map(\r\n                    (picker) =><><ColorPicker id={picker.id} setText={(tag) => sendTag(tag)} /></> \r\n                )\r\n            }\r\n            <button className=\"btn btn-warning\" onClick={addColor}>Add more Color</button>\r\n        </>\r\n    )\r\n}\r\n\r\n// const ColorPicker = props => {\r\n//     const [color, setColor] = useState('#fff');\r\n//     const onChangeCompleteHandler = (newColor) => {\r\n//         if (color !== newColor) {\r\n//             setColor(newColor)\r\n//         }\r\n//     }\r\n//     React.useEffect(\r\n//         () => {\r\n//             const tag = {}\r\n//             tag.id = props.id;\r\n//             tag.text = color.hex\r\n//             props.setText(tag)\r\n//         },\r\n//         [color]\r\n//     )\r\n//     return (\r\n//         <div>\r\n//             <SketchPicker\r\n//                 color={color}\r\n//                 onChange={(color) => onChangeCompleteHandler(color)}\r\n//             />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\nclass ColorPicker extends React.Component {\r\n  state = {\r\n    displayColorPicker: false,\r\n    color: '#fff',\r\n    qty:0,\r\n  };\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker },()=>{\r\n        const tag = {};\r\n        tag.id = this.props.id;\r\n        tag.text = this.state.color.hex;\r\n        tag.qty=this.state.qty;\r\n        this.props.setText(tag)    \r\n    })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false },()=>{\r\n        const tag = {}\r\n        tag.id = this.props.id;\r\n        tag.text = this.state.color.hex\r\n        tag.qty=this.state.qty;\r\n        this.props.setText(tag)    \r\n    })\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ color: color },()=>{\r\n        const tag = {}\r\n        tag.id = this.props.id;\r\n        tag.text = this.state.color.hex;\r\n        tag.qty=this.state.qty;\r\n        this.props.setText(tag)    \r\n    })\r\n  };\r\n  component=()=>{\r\n    const tag = {}\r\n    tag.id = this.props.id;\r\n    tag.text = this.state.color.hex;\r\n    tag.qty=this.state.qty;\r\n    this.props.setText(tag)\r\n    console.log(\"This is called repeatedly\")\r\n  }\r\n\r\n  render() {\r\n\r\n    const styles = reactCSS({\r\n      'default': {\r\n        color: {\r\n          width: '36px',\r\n          height: '14px',\r\n          borderRadius: '2px',\r\n          background: `${this.state.color.hex}`,\r\n        },\r\n        swatch: {\r\n          padding: '5px',\r\n          background: '#fff',\r\n          borderRadius: '1px',\r\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n          display: 'inline-block',\r\n          cursor: 'pointer',\r\n        },\r\n        popover: {\r\n          position: 'absolute',\r\n          zIndex: '2',\r\n        },\r\n        cover: {\r\n          position: 'fixed',\r\n          top: '0px',\r\n          right: '0px',\r\n          bottom: '0px',\r\n          left: '0px',\r\n        },\r\n      },\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div style={ styles.swatch } onClick={ this.handleClick }>\r\n          <div style={ styles.color } />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n          <div style={ styles.cover } onClick={ this.handleClose }/>\r\n          <SketchPicker color={ this.state.color } onChange={ this.handleChange } />\r\n        </div> : null }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ColorPickerInput;","// import React, { Component } from 'react'\r\n// import { WithContext as ReactTags } from \"react-tag-input\";\r\n\r\n// const KeyCodes = {\r\n//     comma: 188,\r\n//     enter: 13,\r\n// };\r\n\r\n// const delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\n// export default class Tags extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             tags: [],\r\n//         };\r\n//         this.handleDelete = this.handleDelete.bind(this);\r\n//         this.handleAddition = this.handleAddition.bind(this);\r\n//         this.handleDrag = this.handleDrag.bind(this);\r\n//     }\r\n\r\n//     handleDelete(i) {\r\n//         this.setState({\r\n//             tags: this.state.tags.filter((tag, index) => index !== i)\r\n//         },\r\n//             () => { this.props.sendTags(this.state.tags) });\r\n//     }\r\n\r\n//     handleAddition(tag) {\r\n//         let { tags } = this.state;\r\n//         this.setState({ tags: [...tags, { id: tags.length + 1, text: tag }] },\r\n//             () => { this.props.sendTags(this.state.tags) }\r\n//         );\r\n//     }\r\n\r\n//     handleDrag(tag, currPos, newPos) {\r\n//         const tags = [...this.state.tags];\r\n//         tags.splice(currPos, 1);\r\n//         tags.splice(newPos, 0, tag);\r\n//         this.setState({ tags },\r\n//             () => { this.props.sendTags(this.state.tags) });\r\n//     }\r\n\r\n//     render() {\r\n//         const { tags } = this.state;\r\n//         return (\r\n//             <div>\r\n//                 <ReactTags\r\n//                     tags={tags}\r\n//                     handleDelete={this.handleDelete}\r\n//                     handleAddition={this.handleAddition}\r\n//                     handleDrag={this.handleDrag}\r\n//                     delimiters={delimiters}\r\n//                 />\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\nimport React, { Component } from \"react\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nexport default class Tags extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tags: [],\r\n    };\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n  }\r\n\r\n  handleDelete(i) {\r\n    this.setState(\r\n      {\r\n        tags: this.state.tags.filter((tag, index) => index !== i),\r\n      },\r\n      () => {\r\n        this.props.sendTags(this.state.tags);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleAddition(tag) {\r\n    let { tags } = this.state;\r\n    this.setState(\r\n      { tags: [...tags, { id: (tags.length + 1).toString(), text: tag.text }] },\r\n      () => {\r\n        this.props.sendTags(this.state.tags);\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    tags.splice(currPos, 1);\r\n    tags.splice(newPos, 0, tag);\r\n    this.setState({ tags }, () => {\r\n      this.props.sendTags(this.state.tags);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const tags = this.state.tags;\r\n    \r\n    return (\r\n      <div>\r\n        <ReactTags\r\n          tags={tags}\r\n          handleDelete={this.handleDelete}\r\n          handleAddition={this.handleAddition}\r\n          handleDrag={this.handleDrag}\r\n          delimiters={delimiters}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ColorPickerInput from \"./ColorPickerInput\";\r\nimport Tags from \"./TagComponent\";\r\nimport ntcjs from \"ntcjs\";\r\n\r\nexport default class Variants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasVariant: false,\r\n      variantsData: [\r\n        {\r\n          id: 1,\r\n          selectedOption: \"Title\",\r\n          tags: [\r\n            // {id:1,text:\"\",img:\"\",qty:\"\"}\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.addData = this.addData.bind(this);\r\n  }\r\n  addData(data) {\r\n    let targetIndex =this.state.variantsData.findIndex(item => item.id === data.id);\r\n    let variantsData = this.state.variantsData;\r\n    variantsData[targetIndex] = data;\r\n    this.setState({ variantsData });\r\n  }\r\n  addOption = () => {\r\n    const dataItem = {\r\n      id: this.state.variantsData.length + 1,\r\n      selectedOption: \"Title\",\r\n      tags: [],\r\n    };\r\n    this.setState({ variantsData: [...this.state.variantsData, dataItem] });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      hasVariant: !this.state.hasVariant,\r\n    });\r\n  };\r\n \r\n  componentDidMount(){\r\n    window.scroll(0,0);\r\n  }\r\n\r\n  render() {\r\n    this.props.sendVariantsData(this.state.variantsData);\r\n    return (\r\n      <div>\r\n        <div className=\"h4\">Variants</div>\r\n        <form>\r\n          <label className=\"title pb-2 px-1\" htmlFor=\"hasVariant\">\r\n            Does this product have variant\r\n          </label>\r\n          <input\r\n            className=\"form-check-input mb-1\"\r\n            id=\"hasvariant\"\r\n            name=\"hasvariant\"\r\n            type=\"checkbox\"\r\n            onChange={(e) => this.handleChange(e)}\r\n          />\r\n          {this.state.hasVariant ? (\r\n            <>\r\n              <VariantsDataComponent\r\n                variantsData={this.state.variantsData}\r\n                addOption={(e) => this.addOption(e)}\r\n                imgList={this.props.imgList}\r\n                addData={(data) => this.addData(data)}\r\n              />\r\n              <VariantsPreview\r\n                addData={(data) => this.addData(data)}\r\n                imgList={this.props.imgList}\r\n                data={this.state.variantsData}\r\n              />\r\n            </>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass VariantsDataComponent extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"fw-bold \">Options</h3>\r\n        {this.props.variantsData.map((item) => {\r\n          return (\r\n            <OptionComponent\r\n              addData={(data) => this.props.addData(data)}\r\n              id={item.id}\r\n              selectedOption={item.selectedOption}\r\n              tags={item.tags}\r\n            />\r\n          );\r\n        })}\r\n        <button\r\n          className=\"btn btn-info\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            return this.props.addOption();\r\n          }}\r\n        >\r\n          Add another Option\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass OptionComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: this.props.selectedOption,\r\n      tags: [],\r\n    };\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({ selectedOption: e.target.value });\r\n  };\r\n  saveData = (tags) => {\r\n    this.setState({ tags: tags }, () => {\r\n      const data = {};\r\n      data.id = this.props.id;\r\n      data.selectedOption = this.state.selectedOption;\r\n      data.tags = this.state.tags;\r\n      this.props.addData(data);\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"bg-success w-100 mb-4 p-4  justify-content-center\">\r\n        <label className=\"fw-bold mb-2 \" htmlFor={`option` + this.props.id}>\r\n          Option {this.props.id}\r\n        </label>\r\n        <select\r\n          className=\"form-control w-50 mb-3\"\r\n          name=\"options\"\r\n          id={\"option\" + this.props.id}\r\n          onChange={(e) => this.onChangeHandler(e)}\r\n        >\r\n          <option value=\"Title\">Title</option>\r\n          <option value=\"Color\">Color</option>\r\n          <option value=\"Style\">Style</option>\r\n          <option value=\"Material\">Material</option>\r\n          <option value=\"Size\">Size</option>\r\n        </select>\r\n        {this.state.selectedOption === \"Color\" ? (\r\n          <ColorPickerInput sendTags={(tags) => this.saveData(tags)} />\r\n        ) : (\r\n          <Tags sendTags={(tags) => this.saveData(tags)} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass VariantsPreview extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3 className=\"fw-bold mt-4 mb-2\">Variants Preview</h3>\r\n        <div className=\"container bg-secondary  w-100 mb-3 p-3\">\r\n          {this.props.data.map((variant) =>\r\n            variant.tags.map((varObject) => {\r\n              return (\r\n                <VariantImgSelect\r\n                  addData={(data) => this.props.addData(data)}\r\n                  variant={variant}\r\n                  imgList={this.props.imgList}\r\n                  id={varObject.id}\r\n                  tag={varObject}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass VariantImgSelect extends Component {\r\n\r\n  onChangeHandler = (e) => {\r\n    if (e.target.value != \"None\") {\r\n      const data = this.props.variant;\r\n      let tagID = 0;\r\n      data.tags.map((tag) => {\r\n        if (tag.id + tag.text === e.target.id) {\r\n          tagID = tag.id;\r\n          console.log(tagID);\r\n        }\r\n      });\r\n      data.tags.find(({ id }) => id === tagID).img = e.target.value;\r\n      this.props.addData(data);\r\n    }\r\n};\r\nonQuantityChangeHandler = (e) => {\r\n  if (e.target.value != \"None\") {\r\n    const data = this.props.variant;\r\n    let tagID = 0;\r\n    data.tags.map((tag) => {\r\n      if (tag.id + tag.text === e.target.id) {\r\n        tagID = tag.id;\r\n        console.log(tagID);\r\n      }\r\n    });\r\n    data.tags.find(({ id }) => id === tagID).qty = e.target.value*1;\r\n    this.props.addData(data);\r\n  }\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      {/* {\"\".startsWith} */}\r\n        <h4>\r\n          {/* {console.log({tag:this.props.tag?.text?.startsWith(\"#\")})} */}\r\n          {this.props.tag?.text?.startsWith(\"#\") ? ntcjs.name(this.props.tag.text)[1] : this.props.tag?.text}\r\n        </h4>\r\n        <select\r\n          name=\"variantImgSelect\"\r\n          id={this.props.tag.id + this.props.tag.text}\r\n          onChange={(e) => this.onChangeHandler(e)}\r\n        >\r\n          <option value=\"None\">None</option>\r\n          {this.props.imgList.map((img) => (\r\n            <option value={img}>{img}</option>\r\n          ))}\r\n        </select>\r\n        <div class=\"form-outline w-25 my-2\">\r\n  <input type=\"number\" \r\n            id={this.props.tag.id + this.props.tag.text}\r\n\r\n  placeholder='Quantity' min={0}  onChange={this.onQuantityChangeHandler} class=\"form-control\" />\r\n</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n// import React, { useState, Component } from 'react'\r\n// import { SketchPicker } from 'react-color';\r\n// import Tags from './TagComponent';\r\n// export default function Variants() {\r\n//     const [hasVariant, sethasVariant] = useState(false);\r\n//     const handleChange = (e) => {\r\n//         sethasVariant(document.getElementById('hasvariant').checked);\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             <div className=\"h4\">Variants</div>\r\n//             <form>\r\n//                 <label className=\"title pb-2 px-1\" htmlFor=\"hasVariant\">Does this product have variant</label>\r\n//                 <input className=\"form-check-input mb-1\" id='hasvariant' name='hasvariant' type='checkbox' onChange={(e) => handleChange(e)}\r\n//                 />\r\n//                 {hasVariant ?\r\n//                     (<VariantsDataComponent />) : null\r\n//                 }\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// };\r\n\r\n// const generateID = () => {\r\n//     return (variantsData.length + 1);\r\n// }\r\n\r\n// export const variantsData = [\r\n//     {\r\n//         id: 1,\r\n//         selectedOption: 'Title',\r\n//         tags: []\r\n//     }\r\n// ]\r\n\r\n// class VariantsDataComponent extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.addOption = this.addOption.bind(this)\r\n//     }\r\n\r\n//     addOption = (e) => {\r\n//         const dataItem = {\r\n//             id: generateID(),\r\n//             selectedOption: 'Title',\r\n//             tags: []\r\n//         }\r\n//         variantsData.push(dataItem);\r\n//         this.forceUpdate();\r\n//         e.preventDefault();\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div >\r\n//                 <h4>Options</h4>\r\n//                 <button class=\"btn btn-primary mt-2 text-center\" onClick={(e) => this.addOption(e)}>Add another Option</button>\r\n\r\n//                 {variantsData.map(\r\n//                     (item) => {\r\n//                         return <\r\n//                             OptionComponent id={item.id} selectedOption={item.selectedOption} tags={item.tags} />\r\n//                     }\r\n//                 )}\r\n\r\n//             </div >\r\n//         )\r\n//     }\r\n// }\r\n\r\n// class OptionComponent extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             selectedOption: this.props.selectedOption,\r\n//             tags: [],\r\n//         }\r\n//     }\r\n//     onChangeHandler = (e) => {\r\n//         this.setState({ selectedOption: e.target.value })\r\n//     }\r\n\r\n//     saveData = (tags) => {\r\n//         this.setState({ tags: tags },\r\n//             () => {\r\n//                 const data = {};\r\n//                 data.id = this.props.id;\r\n//                 data.selectedOption = this.state.selectedOption;\r\n//                 data.tags = this.state.tags;\r\n//                 let indexitem;\r\n//                 variantsData.map(\r\n//                     (item, index) => {\r\n//                         if (item.id === this.props.id) {\r\n//                             indexitem = index\r\n//                         }\r\n//                     }\r\n//                 );\r\n//                 variantsData[indexitem] = data;\r\n//                 console.log(JSON.stringify(variantsData));\r\n\r\n//             }\r\n\r\n//         )\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//                           <div className=\"card p-3 mt-3 d-flex mx-5\">\r\n//                 <h4 className=\"bg-info text-white p-2  text-center\" htmlFor={`option` + this.props.id} >Varient Option {this.props.id}</h4>\r\n//                 <select className=\"mb-2 form-select \" name='options' id={'option' + this.props.id}\r\n//                  onChange={(e) => this.onChangeHandler(e)}>\r\n//                     <option value='Title'>Title</option>\r\n//                     <option value='Color'>Color</option>\r\n//                     <option value='Style'>Style</option>\r\n//                     <option value='Material'>Material</option>\r\n//                     <option value='Size'>Size</option>\r\n//                 </select>\r\n//                 {this.state.selectedOption === 'Color' ? <ColorPickerInput sendTags={(tags => this.saveData(tags))} /> :\r\n//                     <Tags sendTags={(tags) => this.saveData(tags)} />}\r\n\r\n// </div>\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const ColorPickerInput = props => {\r\n//     const [tags, setTags] = useState([{ id: 1, text: '' }])\r\n\r\n//     const sendTag = (tag) => {\r\n//         let targetIndex;\r\n//         tags.map(\r\n//             (item, index) => {\r\n//                 if (item.id === tag.id) {\r\n//                     targetIndex = index;\r\n//                 }\r\n//             }\r\n//         );\r\n//         tags[targetIndex].text = tag.text;\r\n//         props.sendTags(tags)\r\n//     }\r\n//     const addColor = (e) => {\r\n//         const temp = {};\r\n//         temp.id = (tags.length + 1);\r\n//         temp.text = ''\r\n//         setTags([...tags, temp])\r\n//         e.preventDefault();\r\n//     }\r\n//     return (\r\n//         <>\r\n//             {\r\n//                 tags.map(\r\n//                     (picker) => <ColorPicker id={picker.id} setText={(tag) => sendTag(tag)} />\r\n//                 )\r\n//             }\r\n//             <button className=\"btn btn-primary mt-2 text-center\" onClick={addColor}>Add more Color</button>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const ColorPicker = props => {\r\n//     const [color, setColor] = useState('#fff');\r\n//     const onChangeCompleteHandler = (newColor) => {\r\n//         if (color !== newColor) {\r\n//             setColor(newColor)\r\n//         }\r\n//     }\r\n//     React.useEffect(\r\n//         () => {\r\n//             const tag = {}\r\n//             tag.id = props.id;\r\n//             tag.text = color.hex\r\n//             props.setText(tag)\r\n//         },\r\n//         [color]\r\n//     )\r\n//     return (\r\n//         <div>\r\n//             <SketchPicker\r\n//                 color={color}\r\n//                 onChange={(color) => onChangeCompleteHandler(color)}\r\n//             />\r\n//         </div>\r\n//     )\r\n// }\r\n","// import React, { useState } from 'react'\r\n// import ImageUploader from \"react-images-upload\";\r\n\r\n// const Media = props => {\r\n//     const [pictures, setPictures] = useState([]);\r\n//     const [picturesNameList, setPicturesNameList] = useState([]);\r\n\r\n//     React.useEffect(\r\n//         () => {\r\n//             const namearr = [];\r\n//             pictures.map(\r\n//                 (pic) => {\r\n//                     namearr.push(pic.name);\r\n//                 }\r\n//             )\r\n//             setPicturesNameList(namearr);\r\n//             props.setImages(pictures)\r\n//         },\r\n//         [pictures]\r\n//     )\r\n\r\n//     React.useEffect(\r\n//         () => {\r\n//             props.setImagesList(picturesNameList)\r\n//         },\r\n//         [picturesNameList]\r\n//     )\r\n\r\n//     const onDrop = picture => {\r\n//         setPictures(picture);\r\n//     };\r\n//     return (\r\n//         <ImageUploader\r\n//             withPreview={true}\r\n//             withIcon={true}\r\n//             onChange={onDrop}\r\n//             imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n//             maxFileSize={5242880}\r\n//         />\r\n//     );\r\n// };\r\n\r\n// export default Media\r\nimport React, { useState } from 'react'\r\nimport ImageUploader from \"react-images-upload\";\r\n\r\nconst Media = props => {\r\n    const [pictures, setPictures] = useState([]);\r\n    const [picturesNameList, setPicturesNameList] = useState([]);\r\n\r\n    React.useEffect(\r\n        () => {\r\n            const namearr = [];\r\n            pictures.map(\r\n                (pic) => {\r\n                    namearr.push(pic.name);\r\n                }\r\n            )\r\n            setPicturesNameList(namearr);\r\n            props.setImages(pictures)\r\n        },\r\n        [pictures]\r\n    )\r\n\r\n    React.useEffect(\r\n        () => {\r\n            props.setImagesList(picturesNameList)\r\n        },\r\n        [picturesNameList]\r\n    )\r\n\r\n    const onDrop = picture => {\r\n        setPictures(picture);\r\n    };\r\n    return (\r\n        <ImageUploader\r\n            withPreview={true}\r\n            withIcon={true}\r\n            onChange={onDrop}\r\n            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n            maxFileSize={5242880}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Media","import React from \"react\";\r\nexport  const CategoryContext= React.createContext();","import React, { useContext, useState } from \"react\";\r\nimport { Field, useFormik } from \"formik\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport * as Yup from \"yup\";\r\nimport Variants from \"./common/Variant\";\r\nimport Media from \"./common/MediaComponent\";\r\nimport { CategoryContext } from \"./contexts/categoryContext\";\r\n///////////////////////////////////////\r\n// import { productData } from './data'\r\n//import \"./utils/style/addProductComponent.css\";\r\n\r\nconst AddProduct = ({ addProduct }) => {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imgList, setImgList] = useState([]);\r\n  const [images, setImages] = useState();\r\n  const [variantsData, setVariantsData] = useState();\r\n  const { categories, deleteSubCategoryHandler, createSubCategoryHandler } =\r\n    useContext(CategoryContext);\r\n  const [parent, setParent] = useState(\"select parent category\");\r\n  const [children, setChildren] = useState([]);\r\n  const [child, setChild] = useState(\"select child category\");\r\n\r\n  const handleParentChange = (e) => {\r\n    setParent(e.target.value);\r\n    console.log(categories.find((cate) => cate.category === e.target.value));\r\n    setChildren(\r\n      categories.find((cate) => cate.category === e.target.value).subCategories\r\n    );\r\n  };\r\n  const handleChildChange = (e) => {\r\n    setChild(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      price: 0,\r\n      category: \"\",\r\n      costPerItem: 0.54455,\r\n      chargeTax: false,\r\n      stockKeepingUnit: \"\",\r\n      barcode: \"\",\r\n      trackQuantity: false,\r\n      shipping: \"\",\r\n      availableQuantity: 0,\r\n      physicalProduct: false,\r\n      weight: 0,\r\n      variants: {},\r\n    },\r\n    validationSchema: Yup.object({\r\n      // name: Yup.string()\r\n      //     .max(15, \"Must be less than 15 characters\")\r\n      //     .min(3, \"name should be more than 3 characters\")\r\n      //     .required('REQUIRED'),\r\n      // description: Yup.string()\r\n      //     .max(1500, \"Description should not be more than 1500 characters\")\r\n      //     .min(50, 'Description should be of minimum 100 words')\r\n      //     .required(\"Required\")\r\n    }),\r\n    onSubmit: (values) => {\r\n      const form = new FormData();\r\n      values.description = description;\r\n      values.category = `${parent}/${child}`;\r\n      values.variants = variantsData;\r\n      console.log({ variantsData });\r\n      values.imgNames = imgList;\r\n      // values.images = images;\r\n      images.forEach((img) => {\r\n        form.append(\"images\", img);\r\n      });\r\n      // for (const key in values) form.append(key, values[key]);\r\n      addProduct(values, form);\r\n    },\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container px-3\">\r\n      <div className=\"display-6 px-3 fw-bold mt-3 \">Add Product</div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label className=\"title pb-2\" htmlFor=\"title\">\r\n          Title\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps(\"title\")}\r\n        />\r\n        {formik.touched.title && formik.errors.title ? (\r\n          <div>{formik.errors.title}</div>\r\n        ) : null}\r\n        <div class=\"mb-4  text-primary\">\r\n          <div className=\"select-container w-50\">\r\n            <label className=\"title pb-2\" htmlFor=\"price\">\r\n              Category\r\n            </label>\r\n            <select className=\"form-control\" onChange={handleParentChange}>\r\n              <option value={parent}>{parent}</option>\r\n              {categories?.map((cate) => (\r\n                <option value={cate.category}>{cate.category}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"select-container w-50\">\r\n            <label className=\"title py-2\" htmlFor=\"price\">\r\n              Sub Category\r\n            </label>\r\n            <select className=\"form-control\" onChange={handleChildChange}>\r\n              <option value={child}>{child}</option>\r\n              {children?.map((cate) => (\r\n                <option value={cate.name}>{cate.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* <input type='select'  component=\"select\" name=\"child\" value={child}\r\n                       className={\"form-control\"} onChange={handleChildChange}>\r\n                        <option value={'select child'}>Select Child</option>\r\n                        {children?.map(cate => {\r\n                          return <option value={cate.name}>{cate.name}</option>\r\n                        })}\r\n                      </input> */}\r\n          {/* {errors.parent && touched.parent ? (\r\n                        <div class=\"alert alert-danger  p-2\" parent=\"alert\">\r\n                          {errors.parent}\r\n                        </div>\r\n                      ) : null} */}\r\n        </div>\r\n\r\n        {/* .............................................. */}\r\n        <label className=\"title pb-2\" htmlFor=\"title\">\r\n          Discription\r\n        </label>\r\n\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data={description}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setDescription(data);\r\n          }}\r\n        />\r\n        <Media\r\n          setImagesList={(imgList) => setImgList(imgList)}\r\n          setImages={(images) => setImages(images)}\r\n        />\r\n        {/* .............................................. */}\r\n        {/* <div className=\"h4\">Pricing</div> */}\r\n        <label className=\"title pb-2\" htmlFor=\"price\">\r\n          Price\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"price\")}\r\n        />\r\n        {formik.touched.price && formik.errors.price ? (\r\n          <div>{formik.errors.price}</div>\r\n        ) : null}\r\n        {/* .............................................. */}\r\n\r\n        {/* <label className=\"title pb-2\" htmlFor=\"compareAtPrice\">\r\n          Compare at price\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"compareAtPrice\"\r\n          name=\"compareAtPrice\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"compareAtPrice\")}\r\n        />\r\n        {formik.touched.compareAtPrice && formik.errors.compareAtPrice ? (\r\n          <div>{formik.errors.compareAtPrice}</div>\r\n        ) : null} */}\r\n\r\n        {/* .............................................. */}\r\n        {/* <label className=\"title pb-2\" htmlFor=\"costPerItem\">\r\n          Cost per item\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"costPerItem\"\r\n          name=\"costPerItem\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"costPerItem\")}\r\n        />\r\n        {formik.touched.costPerItem && formik.errors.costPerItem ? (\r\n          <div>{formik.errors.costPerItem}</div>\r\n        ) : null} */}\r\n\r\n        {/* <label className=\"title pb-2 px-2\" htmlFor=\"chargeTax\">\r\n          Charge Tax\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"chargeTax\"\r\n          name=\"chargeTax\"\r\n          type=\"checkbox\"\r\n          {...formik.getFieldProps(\"chargeTax\")}\r\n        />\r\n        {formik.touched.chargeTax && formik.errors.chargeTax ? (\r\n          <div>{formik.errors.chargeTax}</div>\r\n        ) : null} */}\r\n\r\n        {/* .............................................. */}\r\n        {/* <div className=\"h4\">Inventory</div>\r\n        <label className=\"title pb-2\" htmlFor=\"stockKeepingUnit\">\r\n          Stock Keeping Unit(SKU)\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"stockKeepingUnit\"\r\n          name=\"stockKeepingUnit\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps(\"stockKeepingUnit\")}\r\n        />\r\n        {formik.touched.stockKeepingUnit && formik.errors.stockKeepingUnit ? (\r\n          <div>{formik.errors.stockKeepingUnit}</div>\r\n        ) : null}\r\n\r\n        <label className=\"title pb-2\" htmlFor=\"barcode\">\r\n          Barcode\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"barcode\"\r\n          name=\"barcode\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps(\"barcode\")}\r\n        />\r\n        {formik.touched.barcode && formik.errors.barcode ? (\r\n          <div>{formik.errors.barcode}</div>\r\n        ) : null} */}\r\n\r\n        {/* <br /> */}\r\n        {/* .............................................. */}\r\n        {/* <label className=\"title pb-2 px-2\" htmlFor=\"trackQuantity\">\r\n          Track Quantity\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"trackQuantity\"\r\n          name=\"trackQuantity\"\r\n          type=\"checkbox\"\r\n          {...formik.getFieldProps(\"trackQuantity\")}\r\n        />\r\n        {formik.touched.trackQuantity && formik.errors.trackQuantity ? (\r\n          <div>{formik.errors.trackQuantity}</div>\r\n        ) : null}\r\n        <br /> */}\r\n        {/* .............................................. */}\r\n\r\n        <label className=\"title p-2\" htmlFor=\"shipping\">\r\n          Shipping\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"shipping\"\r\n          name=\"shipping\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps(\"shipping\")}\r\n        />\r\n        {formik.touched.shipping && formik.errors.shipping ? (\r\n          <div>{formik.errors.shipping}</div>\r\n        ) : null}\r\n        <br />\r\n        {/* .............................................. */}\r\n        {/* <label className=\"title pb-2\" htmlFor=\"availableQuantity\">\r\n          Available Quantity\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"availableQuantity\"\r\n          name=\"availableQuantity\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"availableQuantity\")}\r\n        />\r\n        {formik.touched.availableQuantity && formik.errors.availableQuantity ? (\r\n          <div>{formik.errors.availableQuantity}</div>\r\n        ) : null} */}\r\n\r\n        {/* <div className=\"h4\">Shipping</div> */}\r\n        <label className=\"title mx-1\" htmlFor=\"physicalProduct\">\r\n          Physical Product\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"physicalProduct\"\r\n          name=\"physicalProduct\"\r\n          type=\"checkbox\"\r\n          {...formik.getFieldProps(\"physicalProduct\")}\r\n        />\r\n        {formik.touched.physicalProduct && formik.errors.physicalProduct ? (\r\n          <div>{formik.errors.physicalProduct}</div>\r\n        ) : null}\r\n\r\n        <br />\r\n        {/* .............................................. */}\r\n        <label className=\"title pb-2\" htmlFor=\"weight\">\r\n          Weight\r\n        </label>\r\n        <input\r\n          className=\"form-control w-50 mb-3\"\r\n          id=\"weight\"\r\n          name=\"weight\"\r\n          type=\"numbwe\"\r\n          {...formik.getFieldProps(\"weight\")}\r\n        />\r\n        {formik.touched.weight && formik.errors.weight ? (\r\n          <div>{formik.errors.weight}</div>\r\n        ) : null}\r\n\r\n        {/* .............................................. */}\r\n        <Variants\r\n          sendVariantsData={(variantsData) => setVariantsData(variantsData)}\r\n          imgList={imgList}\r\n        />\r\n        <button className=\"btn btn-primary my-3\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n// import React, { useState } from 'react'\r\n// import { useFormik } from 'formik'\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import Variants from './common/Variant';\r\n// import * as Yup from 'yup';\r\n// import { variantsData } from './common/Variant';\r\n// import Media from './common/MediaComponent';\r\n// // import { productData } from '../data'\r\n// //import \"./utils/style/addProductComponent.css\";\r\n// const AddProduct = ({addProduct}) => {\r\n//     const [description, setDescription] = useState('');\r\n//     const [imgList, setImgList] = useState([]);\r\n//     const [images, setImages] = useState();\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             title: '',\r\n//             price: 0,\r\n//             compareAtPrice: 0.00,\r\n//             costPerItem: 0.00,\r\n//             chargeTax: false,\r\n//             stockKeepingUnit: '',\r\n//             barcode: '',\r\n//             trackQuantity: false,\r\n//             shipping: false,\r\n//             availableQuantity: 0,\r\n//             physicalProduct: false,\r\n//             weight: 0,\r\n//             country: '',\r\n//             variants: {},\r\n//         },\r\n//         validationSchema: Yup.object({\r\n//             // title: Yup.string()\r\n//             //     .max(15, \"Must be less than 15 characters\")\r\n//             //     .min(3, \"Title should be more than 3 characters\")\r\n//             //     .required('REQUIRED'),\r\n//             // description: Yup.string()\r\n//             //     .max(1500, \"Description should not be more than 1500 characters\")\r\n//             //     .min(50, 'Description should be of minimum 100 words')\r\n//             //     .required(\"Required\")\r\n//         })\r\n//         ,\r\n//         onSubmit: values => {\r\n//             const form=new FormData();\r\n//             values.description = description;\r\n//             values.variants = variantsData;\r\n//             console.log({variantsData});\r\n//             values.imgNames = imgList;\r\n//             // values.images = images;\r\n//             images.forEach(img => {\r\n//                 form.append(\"images\",img)\r\n//             });\r\n//             for (const key in values) {\r\n//                 if (typeof(values[key]) === 'object')\r\n//                     form.append(key,JSON.stringify(values[key],[\"id\",\"selectedOption\",\"tags\",\"text\"]));\r\n//             else\r\n//                form.append(key,values[key]);\r\n//             }\r\n//             function appendArray(form_data, values, name){\r\n//                 if(!values && name)\r\n//                     form_data.append(name, '');\r\n//                 else{\r\n//                     if(typeof values == 'object'){\r\n//                         for(let key in values){\r\n//                             if(typeof values[key] == 'object')\r\n//                                 appendArray(form_data, values[key], name + '[' + key + ']');\r\n//                             else\r\n//                                 form_data.append(name + '[' + key + ']', values[key]);\r\n//                         }\r\n//                     }else\r\n//                         form_data.append(name, values);\r\n//                 }\r\n\r\n//                 return form_data;\r\n//             }\r\n//          console.log({images});\r\n//          appendArray(form,variantsData)\r\n//          addProduct(form);\r\n//         }\r\n//     })\r\n//     return (\r\n//         <div className=\"container m-4\">\r\n//             <div className=\"h2\">Add Product</div>\r\n//             <form onSubmit={formik.handleSubmit}>\r\n//                 <label className=\"title pb-2\" htmlFor=\"title\">Title</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='title'\r\n//                     name='title'\r\n//                     type='text'\r\n//                     {...formik.getFieldProps('title')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.title && formik.errors.title ?\r\n//                         (<div>{formik.errors.title}</div>) : null\r\n//                 }\r\n\r\n//                 {/* .............................................. */}\r\n//                 <label className=\"title pb-2\" htmlFor=\"title\">Discription</label>\r\n//                 <CKEditor editor={ClassicEditor}\r\n//                     data={description}\r\n\r\n//                     onChange={(event, editor) => {\r\n//                         const data = editor.getData();\r\n//                         setDescription(data);\r\n//                     }} />\r\n//                 <Media setImagesList={(imgList) => setImgList(imgList)} setImages={(images) => setImages(images)} />\r\n//                 {/* .............................................. */}\r\n//                 <div className=\"h4\">Pricing</div>\r\n//                 <label className=\"title pb-2\" htmlFor=\"price\">Price</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='price'\r\n//                     name='price'\r\n//                     type='number'\r\n//                     {...formik.getFieldProps('price')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.price && formik.errors.price ?\r\n//                         (<div>{formik.errors.price}</div>) : null\r\n//                 }\r\n//                 {/* .............................................. */}\r\n\r\n//                 <label className=\"title pb-2\" htmlFor=\"compareAtPrice\">Compare at price</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='compareAtPrice'\r\n//                     name='compareAtPrice'\r\n//                     type='number'\r\n//                     {...formik.getFieldProps('compareAtPrice')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.compareAtPrice && formik.errors.compareAtPrice ?\r\n//                         (<div>{formik.errors.compareAtPrice}</div>) : null\r\n//                 }\r\n\r\n//                 {/* .............................................. */}\r\n//                 <label className=\"title pb-2\" htmlFor=\"costPerItem\">Cost per item</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='costPerItem'\r\n//                     name='costPerItem'\r\n//                     type='number'\r\n//                     {...formik.getFieldProps('costPerItem')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.costPerItem && formik.errors.costPerItem ?\r\n//                         (<div>{formik.errors.costPerItem}</div>) : null\r\n//                 }\r\n\r\n//                 <label className=\"title pb-2 px-2\" htmlFor=\"chargeTax\">Charge Tax</label>\r\n//                 <input className=\"form-check-input mb-1\"\r\n//                     id='chargeTax'\r\n//                     name='chargeTax'\r\n//                     type='checkbox'\r\n//                     {...formik.getFieldProps('chargeTax')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.chargeTax && formik.errors.chargeTax ?\r\n//                         (<div>{formik.errors.chargeTax}</div>) : null\r\n//                 }\r\n\r\n//                 {/* .............................................. */}\r\n//                 <div className=\"h4\">Inventory</div>\r\n//                 <label className=\"title pb-2\" htmlFor=\"stockKeepingUnit\">Stock Keeping Unit(SKU)</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='stockKeepingUnit'\r\n//                     name='stockKeepingUnit'\r\n//                     type='text'\r\n//                     {...formik.getFieldProps('stockKeepingUnit')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.stockKeepingUnit && formik.errors.stockKeepingUnit ?\r\n//                         (<div>{formik.errors.stockKeepingUnit}</div>) : null\r\n//                 }\r\n\r\n//                 <label className=\"title pb-2\" htmlFor=\"barcode\">Barcode</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='barcode'\r\n//                     name='barcode'\r\n//                     type='text'\r\n//                     {...formik.getFieldProps('barcode')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.barcode && formik.errors.barcode ?\r\n//                         (<div>{formik.errors.barcode}</div>) : null\r\n//                 }\r\n\r\n//                 <br />\r\n//                 {/* .............................................. */}\r\n//                 <label className=\"title pb-2 px-2\" htmlFor=\"trackQuantity\">Track Quantity</label>\r\n//                 <input className=\"form-check-input mb-1\"\r\n//                     id='trackQuantity'\r\n//                     name='trackQuantity'\r\n//                     type='checkbox'\r\n//                     {...formik.getFieldProps('trackQuantity')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.trackQuantity && formik.errors.trackQuantity ?\r\n//                         (<div>{formik.errors.trackQuantity}</div>) : null\r\n//                 }\r\n//                 <br />\r\n//                 {/* .............................................. */}\r\n\r\n//                 <label className=\"title p-2\" htmlFor=\"shipping\">Sell Out of Stock</label>\r\n//                 <input className=\"form-check-input mb-1\"\r\n//                     id='shipping'\r\n//                     name='shipping'\r\n//                     type='checkbox'\r\n//                     {...formik.getFieldProps('shipping')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.shipping && formik.errors.shipping ?\r\n//                         (<div>{formik.errors.shipping}</div>) : null\r\n//                 }\r\n//                 <br />\r\n//                 {/* .............................................. */}\r\n//                 <label className=\"title pb-2\" htmlFor=\"availableQuantity\">Available Quantity</label>\r\n//                 <input className=\"form-control mb-1 w-50\"\r\n//                     id='availableQuantity'\r\n//                     name='availableQuantity'\r\n//                     type='number'\r\n//                     {...formik.getFieldProps('availableQuantity')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.availableQuantity && formik.errors.availableQuantity ?\r\n//                         (<div>{formik.errors.availableQuantity}</div>) : null\r\n//                 }\r\n\r\n//                 <div className=\"h4\">Shipping</div>\r\n\r\n//                 <label className=\"title p-2\" htmlFor=\"physicalProduct\">Physical Product</label>\r\n//                 <input className=\"form-check-input mb-1\"\r\n//                     id='physicalProduct'\r\n//                     name='physicalProduct'\r\n//                     type='checkbox'\r\n//                     {...formik.getFieldProps('physicalProduct')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.physicalProduct && formik.errors.physicalProduct ?\r\n//                         (<div>{formik.errors.physicalProduct}</div>) : null\r\n//                 }\r\n\r\n//                 <br />\r\n//                 {/* .............................................. */}\r\n//                 <label className=\"title pb-2\" htmlFor=\"weight\">Weight</label>\r\n//                 <input className=\"form-control w-50\"\r\n//                     id='weight'\r\n//                     name='weight'\r\n//                     type='numbwe'\r\n//                     {...formik.getFieldProps('weight')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.weight && formik.errors.weight ?\r\n//                         (<div>{formik.errors.weight}</div>) : null\r\n//                 }\r\n\r\n//                 <label className=\"title pb-2\" htmlFor=\"country\">Country</label>\r\n//                 <input className=\"form-control mb-4 w-50\"\r\n//                     id='country'\r\n//                     name='country'\r\n//                     type='textarea'\r\n//                     {...formik.getFieldProps('country')}\r\n//                 />\r\n//                 {\r\n//                     formik.touched.country && formik.errors.country ?\r\n//                         (<div>{formik.errors.country}</div>) : null\r\n//                 }\r\n//                 {/* .............................................. */}\r\n//                 <Variants />\r\n//                 <button className=\"btn btn-primary mb-3\" type='submit'>Submit</button>\r\n\r\n//             </form>\r\n\r\n//         </div>\r\n//     )\r\n// };\r\n\r\n// export default AddProduct;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={\r\n              page === currentPage ? \"page-item active \" : \"page-item \"\r\n            }\r\n          >\r\n            <a className=\"page-link \" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  let data = _(items).slice(startIndex).take(pageSize).value();\r\n  return data;\r\n}\r\n\r\n\r\n","import _ from \"lodash\";\r\n\r\nexport function sortBy(items, path) {\r\n  if (path === \"sort\") return items;\r\n  else {\r\n    if (path === \"Price: Low to High\")\r\n      return _.orderBy(items, [\"price\"], [\"asc\"]);\r\n    if (path === \"Price: High to Low\")\r\n      return _.orderBy(items, [\"price\"], [\"desc\"]);\r\n    if (path === \"New Arrivals\") return _.orderBy(items, [\"createdAt\"], [\"asc\"]);\r\n  }\r\n}\r\n","export function filterByPrice(items, price) {\r\n  if (price === \"All\") return items;\r\n  if (price === \"Less than Rs.500\") return items.filter((pr) => pr.price < 500);\r\n  if (price === \"Rs.500-Rs.1000\")\r\n    return items.filter((pr) => pr.price >= 500 && pr.price <= 1000);\r\n  if (price === \"Greater then Rs.1000\")\r\n    return items.filter((pr) => pr.price > 1000);\r\n  return items;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"../api\";\r\nimport { paginate } from \"../../utils/paginate\";\r\nimport { sortBy } from \"../../utils/sort\";\r\nimport { filterByPrice } from \"../../utils/filter\";\r\nconst slice = createSlice({\r\n  name: \"products\",\r\n  initialState: {\r\n    list: [],\r\n    loading: false,\r\n    lastFetch: null,\r\n    editProduct: {},\r\n    filtered: [],\r\n    pagination: {\r\n      currentPage: 1,\r\n      itemsCount: 0,\r\n      pageSize: 5,\r\n    },\r\n    sort: \"sort\",\r\n    priceFilter: \"All\",\r\n  },\r\n  reducers: {\r\n    productsRequested: (products, action) => {\r\n      products.loading = true;\r\n    },\r\n    productsReceived: (products, action) => {\r\n      products.list = action.payload;\r\n      products.loading = false;\r\n      products.lastFetch = Date.now();\r\n      products.filtered = paginate(\r\n        products.list,\r\n        products.pagination.currentPage,\r\n        products.pagination.pageSize\r\n      );\r\n      products.pagination.itemsCount = products.list?.length;\r\n    },\r\n    productsRequestFailed: (products, action) => {\r\n      products.loading = false;\r\n    },\r\n    pageChanged: (products, action) => {\r\n      products.pagination.currentPage = action.payload;\r\n      products.filtered = paginate(\r\n        products.list,\r\n        products.pagination.currentPage,\r\n        products.pagination.pageSize\r\n      );\r\n    },\r\n    productsSorted: (products, action) => {\r\n      products.sort = action.payload;\r\n      products.list = sortBy(products.list, products.sort);\r\n      products.filtered = paginate(\r\n        products.list,\r\n        products.pagination.currentPage,\r\n        products.pagination.pageSize\r\n      );\r\n    },\r\n    priceFiltered: (products, action) => {\r\n      products.priceFilter = action.payload;\r\n      // products.categoryProducts = products.list.filter(\r\n      //   (prod) => prod.bestSeller\r\n      // );\r\n      products.filtered = filterByPrice(products.list, products.priceFilter);\r\n      products.pagination.itemsCount = products.filtered?.length;\r\n      products.pagination.currentPage = 1;\r\n      products.filtered = paginate(\r\n        products.filtered,\r\n        products.pagination.currentPage,\r\n        products.pagination.pageSize\r\n      );\r\n    },\r\n    editProductAdded: (products, action) => {\r\n      products.editProduct = action.payload;\r\n    },\r\n  },\r\n});\r\nconst {\r\n  productsReceived,\r\n  productsRequested,\r\n  productsRequestFailed,\r\n  pageChanged,\r\n  productsSorted,\r\n  priceFiltered,\r\n  editProductAdded,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\nconst url = \"/product\";\r\n// get all products in apiCallBegan  middleware request\r\nexport const loadProducts = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.products;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url: `${url}/allProducts`,\r\n      onStart: productsRequested.type,\r\n      onSuccess: productsReceived.type,\r\n      onError: productsRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const updateProduct = (id, data) => (dispatch, getState) => {\r\n  dispatch(\r\n    apiCallBegan({\r\n      url: `${url}/update/${id}`,\r\n      data: data,\r\n      onStart: productsRequested.type,\r\n      onSuccess: productsReceived.type,\r\n      onError: productsRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const changePage = (page) => (dispatch, getState) => {\r\n  dispatch(pageChanged(page));\r\n};\r\nexport const addEditProduct = (product) => (dispatch, getState) => {\r\n  dispatch(editProductAdded(product));\r\n};\r\nexport const sortProducts = (path) => (dispatch, getState) => {\r\n  dispatch(productsSorted(path));\r\n};\r\nexport const filterPrice = (path) => (dispatch, getState) => {\r\n  dispatch(priceFiltered(path));\r\n};\r\n\r\n// Selector\r\n\r\nexport const getAllProductsSelector = createSelector(\r\n  (state) => state.entities.products.list,\r\n  (list) => list\r\n);\r\nexport const getEditProductSelector = createSelector(\r\n  (state) => state.entities.products.editProduct,\r\n  (editProduct) => editProduct\r\n);\r\n// export const getCategoryProductsSelector = createSelector(\r\n//   (state) => state.entities.products.categoryProducts,\r\n//   (categoryProducts) => categoryProducts\r\n// );\r\n// export const getProductsWithCategorySelector = (category) =>\r\n//   createSelector(\r\n//     (state) => state.entities.products.list,\r\n//     (list) => list.filter((product) => product.category === category)\r\n//   );\r\n","import React, { Component } from \"react\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Loader from \"react-loader-spinner\";\r\n// import ProductList from \"./common/ProductList\";\r\nimport Pagination from \"./common/Pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport products, {\r\n  changePage,\r\n  sortProducts,\r\n  loadProducts,\r\n  filterPrice,\r\n  addEditProduct,\r\n} from \"../storemini/reducers/products\";\r\nimport { Link } from \"react-router-dom\";\r\n// import $ from \"jquery\";\r\n// import \"./style/showComponent.css\";\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    data: []\r\n  };\r\n  componentDidMount() {\r\n    // $(\"#myCate\").change(function () {});\r\n    this.props.loadProducts();\r\n    this.setState({ data: this.props.products });\r\n\r\n  }\r\n  componentDidUpdate() {\r\n    // if (\r\n    //   this.props.products[0]?.category !== this.state.data[0]?.category ||\r\n    //   this.props.products.length !== this.state.data.length\r\n    // ) {\r\n    //   this.setState({ data: this.props.products });\r\n    // }\r\n  }\r\n  addEditProductHandler = (product) => {\r\n    this.props.addEditProduct(product);\r\n    this.props.history.push('/editProduct');\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <!-- ======= price and sort of product======= -->  */}\r\n        <div className=\"container-fluid border mt-1 p-2\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 text-center\">\r\n              <div className=\"dropdown d-flex justify-content-center message_look\">\r\n                <DropdownButton\r\n                  variant=\"light\"\r\n                  alignRight\r\n                  title={this.props.price}\r\n                  id=\"dropdown-menu-align-right \"\r\n                  onSelect={this.props.filterPrice}\r\n                >\r\n                  <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Less than Rs.500\">\r\n                    Less than Rs.500\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Rs.500-Rs.1000\">\r\n                    Rs.500-Rs.1000\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Greater then Rs.1000\">\r\n                    Greater then Rs.1000\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6 d-flex justify-content-center\">\r\n              <span type=\"text\" className=\" pt-2  count mx-3 \">\r\n                {this.props.itemsCount} items\r\n              </span>\r\n              <div className=\"dropdown message_look fw-bold \">\r\n                <DropdownButton\r\n                  variant=\"light\"\r\n                  alignRight\r\n                  title={this.props.sort}\r\n                  id=\"dropdown-menu-align-right\"\r\n                  onSelect={this.props.sortProducts}\r\n                >\r\n                  <Dropdown.Item eventKey=\"sort\">Sort</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"New Arrivals\">\r\n                    New Arrivals\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Price: High to Low\">\r\n                    Price: High to Low{\" \"}\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Price: Low to High\">\r\n                    {\" \"}\r\n                    Price: Low to High\r\n                  </Dropdown.Item>\r\n                  {/* <Dropdown.Divider /> */}\r\n                </DropdownButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- ======= price and sort of product ends======= -->  */}\r\n\r\n        {/* <!-- ======= product display in cards ======= -->  */}\r\n\r\n        <div className=\"container pt-5\">\r\n          <div className=\"row \">\r\n            {this.props.products && (\r\n              <div class=\"col-lg-12 col-md-12 p-3 mt-2 \">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"bg-info text-white \">\r\n                      <tr>\r\n                        <th scope=\"col bold\">#</th>\r\n                        <th scope=\"col\">Product</th>\r\n                        <th scope=\"col\">Title</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Remaining</th>\r\n                        <th scope=\"col\">Sold</th>\r\n                        <th scope=\"col\">createdAt</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <div className='d-flex text-center mx-50'>\r\n                      <Loader visible={this.props.loading} type=\"Puff\" color=\"#e61523\" height={80} width={80} />\r\n\r\n                    </div>\r\n                    <tbody>\r\n                      {this.props.products?.map((product, index) => {\r\n                        return <tr key={index}>\r\n                          <td>\r\n                            <div class=\"form-check\">\r\n                              <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                {index + 1}\r\n                              </label>\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <img className=\"img-fluid\" src={`${process.env.REACT_APP_URL}/img/${product.images[0]}`}\r\n                              height=\"80px\" width=\"80px\" alt=\"product img\" />\r\n                          </td>\r\n                          <td>{product.title}</td>\r\n                          <td>{product.price}</td>\r\n                          <td className=\"px-5\" style={{ width: \"10%\" }} >\r\n                            {product.quantity}\r\n                          </td>\r\n                          <td className=\"px-5\" style={{ width: \"10%\" }} >\r\n                            {/* <div class=\"form-check form-switch\">\r\n                              <input class=\"form-check-input\" type=\"checkbox\"\r\n                                // onChange={(e) => changeBestSellerHandler(e, product._id)} \r\n                                id=\"flexSwitchCheckChecked\" checked={product.bestSeller} />\r\n                            </div> */}\r\n                            {product.sold ? product.sold : '0'}\r\n                          </td>\r\n                          <td>\r\n                            {/* {console.log(product)} */}\r\n                            {product.createdAt?.substring(0, 10)}\r\n                          </td>\r\n                          <td>\r\n                            <div className=\" col-sm-4  col-md-2 col-lg-2\">\r\n                              <div className=\"pad\">\r\n                                <div className=\"d-flex\">\r\n                                  <div className=\"col-12 mx-4 mb-2\">\r\n                                    <Link >\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-success  btn-block \"\r\n                                        onClick={() => this.addEditProductHandler(product)}\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                    </Link>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <!-- ======= product display in cards ends ======= -->  */}\r\n        {/* <!-- ======= pagination ======= -->  */}\r\n\r\n        <ul className=\"pagination justify-content-center p-4  message_look\">\r\n          <Pagination\r\n            className=\"bg-danger\"\r\n            itemsCount={this.props.itemsCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChange={(page) => this.props.changePage(page)}\r\n          />\r\n        </ul>\r\n\r\n        {/* <!-- ======= pagination ends ======= -->  */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.entities.products.filtered,\r\n  category: state.entities.categories.selected,\r\n  loading: state.entities.products.loading,\r\n  itemsCount: state.entities.products.pagination.itemsCount,\r\n  currentPage: state.entities.products.pagination.currentPage,\r\n  pageSize: state.entities.products.pagination.pageSize,\r\n  sort: state.entities.products.sort,\r\n  price: state.entities.products.priceFilter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadProducts: () => dispatch(loadProducts()),\r\n  changePage: (page) => dispatch(changePage(page)),\r\n  sortProducts: (path) => dispatch(sortProducts(path)),\r\n  filterPrice: (path) => dispatch(filterPrice(path)),\r\n  addEditProduct: (product) => dispatch(addEditProduct(product))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n\r\n\r\n","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './styles/login.css';\r\nconst loginSchema = Yup.object().shape({\r\n  username: Yup.string().required(\"Required\").label(\"Username\"),\r\n  password: Yup.string().required(\"Required\").label(\"Password\"),\r\n  role: Yup.string().label(\"Role\"),\r\n});\r\nexport default function Login({ onLogin }) {\r\n  const [role, setRole] = useState('admin');\r\n  const handleChange=(e)=>{\r\n    setRole(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n  return (\r\n    <div class=\"container pt-5 mt-5 pb-5 font_fam w-auto\">\r\n      <h3 class=\"submit-content fw-bold text-center mt-5\">LOGIN</h3>\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          password: \"\",\r\n          role:\"admin\"\r\n        }}\r\n        validationSchema={loginSchema}\r\n        onSubmit={(values) => {\r\n          // same shape as initial values\r\n          values.role=role;\r\n          onLogin(values);\r\n          // console.log(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div class=\"mb-4 mt-5 \">\r\n              <Field\r\n                name=\"username\"\r\n                className=\"form-control\"\r\n                placeholder=\"Username\"\r\n              />\r\n              {errors.username && touched.username ? (\r\n                <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.username}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div class=\"mb-4\">\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"password\"\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <div class=\"alert alert-danger  p-2 p-2 \" role=\"alert\">\r\n                  {errors.password}\r\n                </div>\r\n              ) : null}\r\n              <Link\r\n                to=\"/forgot\"\r\n                class=\"float-end small pb-2 pt-1 fg_link  fw-bold \"\r\n              >\r\n                <p>FORGOT PASSWORD?</p>\r\n              </Link>\r\n            </div>\r\n            \r\n            <div class=\"mb-4 mt-5 text-primary\">\r\n            <Field type='select'  component=\"select\" name=\"role\" value={role} className={\"form-control\"} onChange={ handleChange }>\r\n                   <option  value=\"admin\">Admin</option>\r\n                   <option  value=\"user\">User</option>\r\n                </Field>\r\n              {errors.role && touched.role ? (\r\n                <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.role}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div class=\"cart mt-4 align-items-center\">\r\n              <button type=\"submit\" class=\"btn text-uppercase w-100 creat_btn \">\r\n                SIGN IN\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import moment from \"moment\";\r\n// import { createSelector } from \"reselect\";\r\n// import { apiCallBegan } from \"../api\";\r\n\r\n// const slice = createSlice({\r\n//   name: \"orders\",\r\n//   initialState: {\r\n//     list: [\r\n//       // { estimatedProcessingTime , \r\n//       // selectedVariants, customWriting   , customDate ,qty,order }\r\n//     ],\r\n//     loading: false,\r\n//     lastFetch: null,\r\n//   },\r\n//   reducers: {\r\n//     ordersRequested: (orders, action) => {\r\n//       orders.loading = true;\r\n//     },\r\n//     ordersReceived: (orders, action) => {\r\n//       orders.list = action.payload;\r\n//       orders.loading = false;\r\n//       orders.lastFetch = Date.now();\r\n//     },\r\n//     ordersRequestFailed: (orders, action) => {\r\n//       orders.loading = false;\r\n//     },\r\n//     orderAdded: (reviews, action) => {\r\n//       reviews.list.push(action.payload);\r\n//     },\r\n//   },\r\n// });\r\n\r\n// const {\r\n//   ordersReceived,\r\n//   ordersRequested,\r\n//   orderAdded,\r\n//   ordersRequestFailed,\r\n// } = slice.actions;\r\n// export default slice.reducer;\r\n\r\n// // Action Creators\r\n// const url = \"/order\";\r\n\r\n// export const loadOrders = () => (dispatch, getState) => {\r\n//   // const { lastFetch } = getState().entities.orders;\r\n//   // const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n//   // if (diffInMinutes < 10) return;\r\n//   dispatch(\r\n//     apiCallBegan({ \r\n//       url:`${url}/userOrders`,\r\n//       onStart: ordersRequested.type,\r\n//       onSuccess: ordersReceived.type,\r\n//       onError: ordersRequestFailed.type,\r\n//     })\r\n//   );\r\n// };\r\n\r\n// export const addOrder = (order,payment,user) =>(dispatch, getState) =>{\r\n \r\n//   dispatch(apiCallBegan({\r\n//     url:`${url}/addOrder`,\r\n//     method: 'post',\r\n//     data: {order,payment,user},\r\n//     message:\"Order added successfully !!! check your mail for further detail!!!\",\r\n//     onSuccess: orderAdded.type,\r\n//     onError: ordersRequestFailed.type,\r\n//   }));\r\n// };\r\n  \r\n\r\n// // Selector\r\n// export const getOrdersByUserSelector = createSelector(\r\n//   (state) => state.entities.orders.list,\r\n//   (orders) => orders\r\n// );\r\n// export const getLoadingSelector = createSelector(\r\n//   (state) => state.entities.orders.loading,\r\n//   (loading) => loading\r\n// );\r\n\r\n// // export const getOrdersByUser = (userId) =>\r\n// //   createSelector(\r\n// //     (state) => state.entities.orders.list,\r\n// //     (orders) => orders.filter((item) => item.userId === userId)\r\n// //   );\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"../api\";\r\nimport { paginate } from \"../../utils/paginate\";\r\nimport { sortBy } from \"../../utils/sort\";\r\nimport { filterByPrice } from \"../../utils/filter\";\r\n// import \"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\";\r\n\r\nconst slice = createSlice({\r\n  name: \"orders\",\r\n  initialState: {\r\n    list: [],\r\n    loading: false,\r\n    lastFetch: null,\r\n    detailedOrder:{},\r\n    filtered: [],\r\n    pagination: {\r\n      currentPage: 1,\r\n      itemsCount: 0,\r\n      pageSize: 5,\r\n    },\r\n    sort: \"sort\",\r\n    priceFilter:\"All\"\r\n  },\r\n  reducers: {\r\n    ordersRequested: (orders, action) => {\r\n      orders.loading = true;\r\n    },\r\n    ordersReceived: (orders, action) => {\r\n      orders.list = action.payload;\r\n      orders.loading = false;\r\n      orders.lastFetch = Date.now();\r\n      orders.filtered = paginate(\r\n        orders.list,\r\n        orders.pagination.currentPage,\r\n        orders.pagination.pageSize\r\n      );\r\n      orders.pagination.itemsCount = orders.list?.length;\r\n    },\r\n    ordersRequestFailed: (orders, action) => {\r\n      orders.loading = false;\r\n    },\r\n    pageChanged: (orders, action) => {\r\n      orders.pagination.currentPage = action.payload;\r\n      orders.filtered = paginate(\r\n        orders.list,\r\n        orders.pagination.currentPage,\r\n        orders.pagination.pageSize\r\n      );\r\n    },\r\n    ordersSorted: (orders, action) => {\r\n      orders.sort = action.payload;\r\n      orders.list = sortBy(orders.list, orders.sort);\r\n      orders.filtered = paginate(\r\n        orders.list,\r\n        orders.pagination.currentPage,\r\n        orders.pagination.pageSize\r\n      );\r\n    },\r\n    priceFiltered: (orders, action) => {\r\n      orders.priceFilter = action.payload;\r\n      // orders.categoryorders = orders.list.filter(\r\n      //   (prod) => prod.bestSeller\r\n      // );\r\n      orders.filtered = filterByPrice(orders.list, orders.priceFilter);\r\n      orders.pagination.itemsCount = orders.filtered?.length;\r\n      orders.pagination.currentPage=1;\r\n      orders.filtered = paginate(\r\n        orders.filtered,\r\n        orders.pagination.currentPage,\r\n        orders.pagination.pageSize\r\n      );\r\n    },\r\n    detailedOrderAdded: (orders, action) => {\r\n      orders.detailedOrder = action.payload;\r\n    },\r\n  },\r\n});\r\nconst {\r\n  ordersReceived,\r\n  ordersRequested,\r\n  ordersRequestFailed,\r\n  pageChanged,\r\n  ordersSorted,\r\n  priceFiltered,\r\n  detailedOrderAdded\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\nconst url = \"/order\";\r\n// get all orders in apiCallBegan  middleware request\r\nexport const loadOrders = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.orders;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url:  `${url}/allOrders`,\r\n      onStart: ordersRequested.type,\r\n      onSuccess: ordersReceived.type,\r\n      onError: ordersRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const changePage = (page) => (dispatch, getState) => {\r\n  dispatch(pageChanged(page));\r\n};\r\nexport const sortOrders = (path) => (dispatch, getState) => {\r\n  dispatch(ordersSorted(path));\r\n};\r\nexport const filterPrice = (path) => (dispatch, getState) => {\r\n  dispatch(priceFiltered(path));\r\n};\r\n\r\nexport const addDetailedOrder = (order) => (dispatch, getState) => {\r\n  dispatch(detailedOrderAdded(order));\r\n};\r\n\r\nexport const changeOrderStatus = (id,data) => (dispatch, getState) => {\r\n  dispatch(\r\n    apiCallBegan({\r\n      url:`${url}/changeStatus/${id}`,\r\n      data:data,\r\n      method:\"patch\",\r\n      onStart: ordersRequested.type,\r\n      onSuccess: ordersRequestFailed.type,\r\n      onError: ordersRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n// Selector\r\n\r\nexport const getAllOrdersSelector = createSelector(\r\n  (state) => state.entities.orders.list,\r\n  (list) => list\r\n);\r\nexport const getDetailedOrderSelector = createSelector(\r\n  (state) => state.entities.orders.detailedOrder,\r\n  (order) => order\r\n);\r\n\r\n\r\n\r\n// export const getCategoryordersSelector = createSelector(\r\n//   (state) => state.entities.orders.categoryorders,\r\n//   (categoryorders) => categoryorders\r\n// );\r\n// export const getordersWithCategorySelector = (category) =>\r\n//   createSelector(\r\n//     (state) => state.entities.orders.list,\r\n//     (list) => list.filter((order) => order.category === category)\r\n//   );\r\n","import React, { Component } from \"react\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Pagination from \"./common/Pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport order, {\r\n  changePage,\r\n  sortOrders,\r\n  loadOrders,\r\n  filterPrice,\r\n  addDetailedOrder,\r\n} from \"../storemini/reducers/order\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Orders extends Component {\r\n  state = {\r\n    data: [],\r\n  };\r\n  componentDidMount() {\r\n    this.props.loadOrders();\r\n    this.setState({ data: this.props.orders });\r\n  }\r\n \r\naddDetailedOrderHandler=(order)=>{\r\n  this.props.addDetailedOrder(order);\r\n  this.props.history.push('/orderDetail');\r\n};\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <!-- ======= price and sort of product======= -->  */}\r\n        <div className=\"container-fluid border mt-1 p-2\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 text-center\">\r\n              <div className=\"dropdown d-flex justify-content-center message_look\">\r\n                {/* <Dropdown\r\n                  variant=\"light\"\r\n                  alignRight\r\n                  title={this.props.price}\r\n                  id=\"dropdown-menu-align-right\"\r\n                  onSelect={this.props.filterPrice}\r\n                >\r\n                  <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Less than Rs.500\">\r\n                    Less than Rs.500\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Rs.500-Rs.1000\">\r\n                    Rs.500-Rs.1000\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Greater then Rs.1000\">\r\n                    Greater then Rs.1000\r\n                  </Dropdown.Item>\r\n                </Dropdown> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6 d-flex justify-content-center\">\r\n              <span type=\"text\" className=\" pt-2  count mx-3 \">\r\n                {this.props.itemsCount} items\r\n              </span>\r\n              <div className=\"dropdown message_look fw-bold \">\r\n                <DropdownButton\r\n                  variant=\"light\"\r\n                  alignRight\r\n                  title={this.props.sort}\r\n                  id=\"dropdown-menu-align-right\"\r\n                  onSelect={this.props.sortOrders}\r\n                >\r\n                  <Dropdown.Item eventKey=\"sort\">Sort</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"New Arrivals\">\r\n                    New Arrivals\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Price: High to Low\">\r\n                    Price: High to Low{\" \"}\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"Price: Low to High\">\r\n                    {\" \"}\r\n                    Price: Low to High\r\n                  </Dropdown.Item>\r\n                  {/* <Dropdown.Divider /> */}\r\n                </DropdownButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- ======= price and sort of product ends======= -->  */}\r\n\r\n        {/* <!-- ======= product display in cards ======= -->  */}\r\n\r\n        <div className=\"container pt-5\">\r\n          <div className=\"row \">\r\n\r\n            <div class=\"table-responsive\">\r\n              <table className=\"table  \">\r\n                <thead className=\"bg-danger text-white \">\r\n                  <tr>\r\n                    <th scope=\"col bold\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Guest</th>\r\n                    <th scope=\"col\">createdAt</th>\r\n                    <th scope=\"col\">Number Of Products</th>\r\n                    <th scope=\"col\">shipping charges</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Total</th>\r\n                    <th scope=\"col\">Charged</th>\r\n                    <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <Loader   class='text-center'  visible={this.props.loading} type=\"Puff\" color=\"#e61523\" height={80} width={80} />\r\n\r\n                <tbody>\r\n                  {this.props.orders.map((order, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{++index}</td>\r\n                        <td>{order.name}</td>\r\n                        <td>{order.guest && <i className=\"fas fa-check text-primary\"></i>}\r\n                          {!order.guest && <i class=\"fas fa-times\"></i>}</td>\r\n                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                        <td>{order.products.length}</td>\r\n                        <td>{order.shipping.charges}</td>\r\n                        <td> {order.status}</td>\r\n                        <td>{order.total}</td>\r\n                        <td>{order.payment.charge.amount}</td>\r\n                        <td><button type=\"button\" class=\"btn btn-secondary\" onClick={()=>this.addDetailedOrderHandler(order)}>Detail</button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        {/* <!-- ======= product display in cards ends ======= -->  */}\r\n        {/* <!-- ======= pagination ======= -->  */}\r\n\r\n        <ul className=\"pagination justify-content-center p-4  message_look\">\r\n          <Pagination\r\n            className=\"bg-danger\"\r\n            itemsCount={this.props.itemsCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChange={(page) => this.props.changePage(page)}\r\n          />\r\n        </ul>\r\n\r\n        {/* <!-- ======= pagination ends ======= -->  */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  orders: state.entities.orders.filtered,\r\n  category: state.entities.categories.selected,\r\n  loading: state.entities.orders.loading,\r\n  itemsCount: state.entities.orders.pagination.itemsCount,\r\n  currentPage: state.entities.orders.pagination.currentPage,\r\n  pageSize: state.entities.orders.pagination.pageSize,\r\n  sort: state.entities.orders.sort,\r\n  price: state.entities.orders.priceFilter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadOrders: () => dispatch(loadOrders()),\r\n  changePage: (page) => dispatch(changePage(page)),\r\n  sortOrders: (path) => dispatch(sortOrders(path)),\r\n  filterPrice: (path) => dispatch(filterPrice(path)),\r\n  addDetailedOrder: (order) => dispatch(addDetailedOrder(order))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div class=\"page-wrap d-flex flex-row align-items-center mt-5\">\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-12 text-center\">\r\n                <span class=\"display-1 d-block\">404</span>\r\n                <div class=\"mb-4 lead\">The page you are looking for was not found.</div>\r\n                <Link to=\"/\" class=\"link\">Back to Home</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nconst token = localStorage.getItem('jwt')\r\n if (token) {\r\n    axios.defaults.headers.common['x-token'] = `${token}`;\r\n  }\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    // console.log(\"logging the error\", error);\r\n    // alert(\"An unexpected error occurred.\");\r\n    // toast.error(\"An unexpected error occurred.\");\r\n    // console.log();\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  patch: axios.patch,\r\n  delete: axios.delete\r\n};\r\n","import http from './httpservice';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/review`;\r\nexport function getAllReviews() {\r\n    return http.get(`${url}/allReviews`);\r\n}\r\nexport function deleteReview(id) {\r\n    return http.delete(`${url}/deleteReview/${id}`);\r\n}\r\nexport function updateReview(favorite,id) {\r\n    return http.patch(`${url}/updateReview/${id}`, {\r\n        favorite\r\n});\r\n}\r\n\r\nexport function createSubCategory(data){\r\n    return http.patch(`${url}/addSubCategory/${data.parent}`, {\r\n        subCategory:data.name.trim(),\r\n        description:data.description\r\n});\r\n};\r\n\r\nconst AllServices = {\r\n    getAllReviews\r\n}\r\nexport default AllServices;","import http from './httpservice';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/user`;\r\nexport function addUser(user) {\r\n    return http.post(`${url}/addUser`, {\r\n\temail:user.email,\r\n\tname:user.name,\r\n    contactNo:user.contactNo,\r\n    password:user.password,\r\n    passwordConfirm:user.password\r\n    });\r\n}\r\nexport function getStaff(){\r\n    return http.get(`${url}/staff`);\r\n}\r\nexport function deleteUser(name){\r\n    return http.patch(`${url}/delete/${name}`);\r\n}\r\nexport  function  getMe() {\r\n    return  http.get(`${url}/me`);\r\n}\r\n\r\nexport  function  updateMe(data) {\r\n    return  http.patch(`${url}/updateMe`,data);\r\n}\r\n\r\n\r\nconst AllServices = {\r\n    addUser,\r\n    getStaff,\r\ngetMe,\r\n    updateMe,\r\n}\r\nexport default AllServices;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"../api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"staff\",\r\n  initialState: {\r\n    list: [],\r\n    loading: false,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    staffRequested: (staff, action) => {\r\n      staff.loading = true;\r\n    },\r\n    staffReceived: (staff, action) => {\r\n      console.log(action.payload);\r\n      staff.list = action.payload;\r\n      staff.loading = false;\r\n      staff.lastFetch = Date.now();\r\n    },\r\n    staffRequestFailed: (staff, action) => {\r\n      staff.loading = false;\r\n    },\r\n    staffAddressAdded: (staff, action) => {\r\n      staff.list = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { staffReceived, staffRequested, staffRequestFailed, staffAddressAdded } =\r\n  slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\n\r\nexport const loadStaff = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.staff;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url: \"user/staff\",\r\n      onStart: staffRequested.type,\r\n      onSuccess: staffReceived.type,\r\n      onError: staffRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n// export const login = (list) => (dispatch, getState) => {\r\n//   dispatch(\r\n//     apiCallBegan({\r\n//       url: \"staff/addAddress\",\r\n//       method: \"post\",\r\n//       list,\r\n//       message: \"log in successfully !!!\",\r\n//       onStart: staffRequested.type,\r\n//       onSuccess: staffReceived.type,\r\n//       onError: staffRequestFailed.type,\r\n//     })\r\n//   );\r\n// };\r\n\r\n// export const addstaffAddress = (staff, payment) => (dispatch, getState) => {\r\n//   dispatch(\r\n//     apiCallBegan({\r\n//       url: \"staff/addAddress\",\r\n//       method: \"post\",\r\n//       list: { staff, payment },\r\n//       message: \"Your Address added successfully !!!\",\r\n//       onSuccess: staffAddressAdded.type,\r\n//       onError: staffRequestFailed.type,\r\n//     })\r\n//   );\r\n// };\r\n\r\n// Selector\r\nexport const getStaffSelector = createSelector(\r\n  (state) => state.entities.staff.list,\r\n  (staff) => staff\r\n);\r\nexport const getLoadingSelector = createSelector(\r\n  (state) => state.entities.staff.loading,\r\n  (loading) => loading\r\n);\r\n\r\n// export const getstaffBystaff = (staffId) =>\r\n//   createSelector(\r\n//     (state) => state.entities.staff.list,\r\n//     (staff) => staff.filter((item) => item.staffId === staffId)\r\n//   );\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { deleteReview, getAllReviews, updateReview } from '../services/reviewServices';\r\nimport { deleteUser, getStaff } from '../services/UsersService';\r\nimport { getStaffSelector, loadStaff } from '../storemini/reducers/staff';\r\n\r\nexport default function Staff() {\r\n    const dispatch = useDispatch();\r\n    const staff = useSelector(getStaffSelector);\r\n\r\n    const onDeleteHandler = async (user) => {\r\n        console.log({ user });\r\n        const preUsers = staff;\r\n        const filtered = staff.filter(rev => rev._id !== user._id);\r\n        // setStaff(filtered);\r\n        try {\r\n            await deleteUser(user.name);\r\n        } catch (error) {\r\n            toast.error('Something went wrong User Not Deleted !!!');\r\n            // setStaff(preUsers)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadStaff());\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"display-6 px-3 fw-bold mt-3 \">ALL USERS</div>\r\n            </div>\r\n            <button class=\"btn text-center p-0\"><Link class=\"btn btn-secondary \r\n             p-1\" to='/addUser'>Add New User</Link></button>\r\n            <div class=\"table-responsive\">\r\n                <table className=\"table mx-2 mt-3\">\r\n\r\n                    <thead>\r\n                        <tr className=\"bg-info\">\r\n                            <th scope=\"col\">#</th>\r\n                            {/* <th scope=\"col\">User</th> */}\r\n                            <th scope=\"col\">Username</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">CreatedAt</th>\r\n                            <th scope=\"col\">Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    {staff && staff.map((user, index) => {\r\n                        console.log(user);\r\n                        return (\r\n                            <tr>\r\n                                <td className=\"px-2\" style={{ width: \"5%\" }}>{index + 1}</td>\r\n                                {/* <td style={{width:\"25%\"}}>{user.profile}</td> */}\r\n                                <td style={{ width: \"25%\" }}>{user.name}</td>\r\n                                <td style={{ width: \"25%\" }} >{user.email}</td>\r\n                                <td style={{ width: \"10%\" }}>{user.createdAt.substring(0, 10)}</td>\r\n                                <td style={{ width: \"10%\" }}><div class=\"d-grid gap-1 mx-auto\">\r\n                                    <button class=\"btn btn-sm btn-info\" type=\"button\">Detail</button>\r\n                                    <button onClick={() => onDeleteHandler(user)} class=\"btn btn-sm btn-danger\" type=\"button\">Delate</button>\r\n                                </div></td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './styles/login.css';\r\nimport { CategoryContext } from \"./contexts/categoryContext\";\r\nconst loginSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\").label(\"name\"),\r\n  description: Yup.string().required(\"Required\").label(\"description\"),\r\n  parent: Yup.string().label(\"parent\"),\r\n});\r\nexport default function Categories() {\r\n  // console.log(categories);\r\n  const { categories, deleteSubCategoryHandler, createSubCategoryHandler } = useContext(CategoryContext)\r\n  const [parent, setParent] = useState('select parent');\r\n  // const [main, setMain] = useState(false);\r\n  // const [Count, setCount] = useState(0);\r\n  let count = 0;\r\n  const handleChange = (e) => {\r\n    setParent(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n  const mainHandleChange = () => {\r\n    // setParent(e.target.value);\r\n    // console.log(e.target.value);\r\n    // setMain(main?false:true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"container-fluid pb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-9 .col-md-9\">\r\n            <div class=\"display-6 px-3 fw-bold mt-3\">Categories</div>\r\n            <div class=\"display-7 px-3\">Add,edit or delete a category</div>\r\n          </div>\r\n          {/* <div class=\"col-lg-3 .col-md-12 mt-4\">\r\n            <div class=\"form-outline \">\r\n              <input\r\n                type=\"search\"\r\n                id=\"form1\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      <div class=\"container-fluid bg_color  rounded h-100\">\r\n        <div class=\"card w-100 rounded\">\r\n          <div class=\"row d-flex justify-content-around  px-3\">\r\n            <div class=\"col-lg-3 col-md-3 mt-3 pb-5\">\r\n              <Formik\r\n                initialValues={{\r\n                  name: \"\",\r\n                  description: \"\",\r\n                  parent: \"select parent\"\r\n                }}\r\n                validationSchema={loginSchema}\r\n                onSubmit={(values) => {\r\n                  values.parent = parent;\r\n                  createSubCategoryHandler(values);\r\n                  console.log(values);\r\n                }}\r\n              >\r\n                {({ errors, touched }) => (\r\n                  <Form>\r\n                    <div class=\"mb-4 mt-2 \">\r\n                      <Field\r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                      {errors.name && touched.name ? (\r\n                        <div class=\"alert alert-danger  p-2\" parent=\"alert\">\r\n                          {errors.name}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div class=\"mb-4\">\r\n                      <Field\r\n                        name=\"description\"\r\n                        type=\"description\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Description\"\r\n                      />\r\n                      {errors.description && touched.description ? (\r\n                        <div class=\"alert alert-danger  p-2 p-2 \" parent=\"alert\">\r\n                          {errors.description}\r\n                        </div>\r\n                      ) : null}\r\n\r\n                    </div>\r\n                    {/* <div className=\"checkbox\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" onChange={mainHandleChange} type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\r\n                        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                          Main category\r\n                        </label>\r\n                      </div>\r\n                    </div> */}\r\n                    <div class=\"mb-4  text-primary\">\r\n                      <Field type='select' component=\"select\" name=\"parent\" value={parent}\r\n                        className={\"form-control\"} onChange={handleChange}>\r\n                        <option value={'select parent'}>Select Parent</option>\r\n                        {categories.map(cate => {\r\n                          return <option value={cate.category}>{cate.category}</option>\r\n                        })}\r\n                      </Field>\r\n                      {errors.parent && touched.parent ? (\r\n                        <div class=\"alert alert-danger  p-2\" parent=\"alert\">\r\n                          {errors.parent}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div class=\"cart mt-4 align-items-center\">\r\n                      <button type=\"submit\" class=\"lead btn text-uppercase w-100 creat_btn \">\r\n                        create category\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n            <div class=\"col-lg-9 col-md-12 p-3 mt-2 \">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"bg-info text-white \">\r\n                    <tr>\r\n                      <th scope=\"col\">ID</th>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Description</th>\r\n                      <th scope=\"col\">Parent</th>\r\n                      {/* <th scope=\"col\">Order</th> */}\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {categories?.map((cate) => {\r\n                      return cate?.subCategories?.map((subCate) => {\r\n                        count += 1;\r\n                        return <tr key={count}>\r\n                          <td>\r\n                            <div class=\"form-check\">\r\n                              <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                {count}\r\n                              </label>\r\n                            </div>\r\n                          </td>\r\n                          <td>{subCate.name}</td>\r\n                          <td>{subCate.description}</td>\r\n                          <td>{cate.category}</td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <button\r\n                              class=\"btn btn-light text-light bg-danger  border\"\r\n                              type=\"button\"\r\n                              aria-expanded=\"false\"\r\n                              onClick={() => deleteSubCategoryHandler({ category: cate.category, subCategory: subCate.name })}\r\n                            >\r\n                              Delete\r\n                            </button>\r\n\r\n                          </td>\r\n                        </tr>\r\n                      });\r\n                    })}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import http from './httpservice';\r\nimport decode from 'jwt-decode';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/auth`;\r\n\r\nconsole.log({url});\r\nexport const login=(user)=> {\r\n    return http.post(`${url}/login`,\r\n        {\r\n        name: user.username,\r\n        password: user.password,\r\n        role:user.role\r\n        }\r\n    );\r\n};\r\n\r\nexport const forgotPassword=(email)=> {\r\n    return http.post(`${url}/forgotPassword`,\r\n        {\r\n       email\r\n        }\r\n    );\r\n};\r\n\r\n\r\nexport const resetPassword=(data,token)=> {\r\n    return http.patch(`${url}/resetPassword/${token}`,\r\n        {\r\n            password: data.password,\r\n            passwordConfirm:data.confirmPassword\r\n        }\r\n    );\r\n};\r\nexport const updatePassword=(data)=> {\r\n    return http.patch(`${url}/updatePassword`,\r\n        {\r\n            passwordCurrent:data.currentPassword,\r\n            password: data.newPassword,\r\n            passwordConfirm:data.confirmNewPassword\r\n        }\r\n    );\r\n};\r\nexport const isLogin=()=> {\r\n    const token = localStorage.getItem('jwt')\r\n    if (token) {\r\n        const user = decode(token);\r\n        return user;\r\n    } else {\r\n        return null;\r\n    }    \r\n}\r\nexport const jwtClear=()=> {\r\n    localStorage.removeItem('jwt');\r\n    window.location = \"/login\";\r\n}\r\n\r\nconst allOnes={\r\n    isLogin,\r\n    login,\r\n    jwtClear,\r\n    forgotPassword\r\n}\r\nexport default allOnes;\r\n","import http from './httpservice';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/product`;\r\nexport function getAllProducts() {\r\n    return http.get(`${url}/allProducts`);\r\n}\r\nexport function deleteProduct(id) {\r\n    return http.delete(`${url}/delete/${id}`);\r\n  }\r\n  export function addNewBasket(data) {\r\n    return http.post(`${url}/addBasket`,data);\r\n}\r\nexport function confirmTransaction(id) {\r\n    return http.patch(`${url}/${id}`, {\r\n        status:true\r\n});\r\n};\r\nexport function changeBestSellerStatus(status,id) {\r\n    return http.patch(`${url}/changeBestSellerStatus/${id}`, {\r\n        status\r\n})};\r\nexport function changeProductStatus(status,id) {\r\n    return http.patch(`${url}/changeProductStatus/${id}`, {\r\n        status\r\n})};\r\nexport function getProduct(id){\r\n    return http.get(`${url}/${id}`);\r\n};\r\n\r\n\r\nexport function getUserTransactions(id) {\r\n    return http.get(`${url}/${id}`);\r\n}\r\nexport function getUserStats(id) {\r\n    return http.get(`${url}/stats/${id}`);\r\n}\r\nexport function addNewProduct(product) {\r\n    return http.post(`${url}/addProduct`,product);\r\n}\r\nexport function addNewProductImages(id,images) {\r\n    return http.patch(`${url}/addProductImages/${id}`,images);\r\n}\r\nconst AllServices = {\r\n    getAllProducts,\r\n    confirmTransaction,\r\n    getUserTransactions,\r\n    addNewProduct,\r\n    getUserStats,\r\n    getProduct\r\n}\r\nexport default AllServices;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ntcjs, { name } from \"ntcjs\";\r\n\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { toast } from 'react-toastify';\r\nimport { changeOrderStatus } from '../storemini/reducers/order';\r\nimport Loader from 'react-loader-spinner';\r\nclass OrderDetail extends Component {\r\n\r\n    state = {\r\n        error: [],\r\n        variants: [],\r\n        status: 'Pending'\r\n    }\r\n    addVariants = async (variant) => {\r\n        await this.setState({ variants: [...this.state.variants, variant] });\r\n    }\r\n    filterTags = () => {\r\n        // console.log(this.props.order.products);\r\n        const variantsArray = [];\r\n        const errorArray = [];\r\n\r\n\r\n        this.props.order.products.map(orderProduct => {\r\n            const { qty, product } = orderProduct;\r\n            orderProduct.selectedVariants.map(orderVar => {\r\n                orderProduct.product.variants.map(productVar => {\r\n                    if (orderVar.variantType === productVar.selectedOption) {\r\n                        productVar.tags.map(tag => {\r\n                            if (tag._id == orderVar.tag._id) {\r\n                                if (qty > tag.qty) {\r\n                                    // const temp = [...this.state.error];\r\n                                    variantsArray.push({ product, option: orderVar.variantType, tag, sold: true });\r\n                                    errorArray.push({ product, option: orderVar.variantType, tag, sold: true });\r\n                                    // this.setState({ error: temp });\r\n                                } else {\r\n                                    const { ...tempTag } = tag;\r\n                                    // tempTag.qty = tempTag.qty - qty;\r\n                                    variantsArray.push({ product, option: orderVar.variantType, tag: tempTag, sold: false });\r\n                                }\r\n                            }\r\n                        }\r\n                        );\r\n                    }\r\n                });\r\n            });\r\n            // console.log(orderProduct.product.variants);\r\n            // console.log(orderProduct.selectedVariants);\r\n            // const {selectedVariants,_id,qty}=orderProduct;\r\n            // const product=this.props.products.find({_id});\r\n            // console.log({pr:product});\r\n        });\r\n        this.setState({ variants: variantsArray })\r\n    }\r\n    setStatus = (e) => {\r\n        this.setState({ status: e })\r\n    }\r\n    onchangeStatusHandler = () => {\r\n        if (this.state.error.length > 0) return toast.warn(\"Some Product is not available\");\r\n        console.log(this.props.order._id, this.state.status);\r\n        this.props.changeOrderStatus(this.props.order._id,{status:this.state.status});\r\n    };\r\n    componentDidMount() {\r\n        // alert(JSON.stringify(this.props.order));\r\n        if (!this.props.order)\r\n            this.props.history.push('/');\r\n        this.filterTags();\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.order && (\r\n                    <div>\r\n                        {/* <!-- Modal --> */}\r\n                        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                            <div class=\"modal-dialog\">\r\n                                <div class=\"modal-content\">\r\n                                <Loader    visible={this.props.loading} type=\"Puff\" color=\"#e61523\" height={80} width={80} />\r\n                                        <button type=\"button\" class=\"btn btn-secondary text-center\" data-bs-dismiss=\"modal\">{this.state.status}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container-fluid pb-5\">\r\n                            <div className=\"display-6 px-3 fw-bold mt-3\">Order Detail</div>\r\n                            <div className=\"display-7 px-3\">Details for Order ID:<span>{this.props.order._id}</span></div>\r\n                        </div>\r\n                        <div className=\"container-fluid bg_color pt-3  rounded\">\r\n                            <div className=\"card w-auto mx-4  rounded\">\r\n                                <div className=\"row  d-flex justify-content-between bg-light p-3 \">\r\n                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\r\n                                        <div className=\"display-8\"><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                                            {this.props.order.createdAt}</div>\r\n                                        <div className=\"display-9 \">Details for Order ID:<span>{this.props.order._id}</span></div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-4 col-sm-4 \">\r\n                                        <div className=\"pad\">\r\n                                            <div className=\"row d-flex justify-content-center px-2\">\r\n                                                <div className=\"col-lg-7 col-md-8 col-sm-10 mt-2\">\r\n                                                    {/*  */}\r\n                                                    <div className=\"dropdown d-flex justify-content-center message_look\">\r\n                                                        <DropdownButton\r\n                                                            variant=\"light\"\r\n                                                            alignRight\r\n                                                            title={this.state.status}\r\n                                                            id=\"dropdown-menu-align-right \"\r\n                                                            onSelect={this.setStatus}\r\n                                                        >\r\n                                                            <Dropdown.Item eventKey=\"pending\">Pending</Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"confirmed\">\r\n                                                                Confirmed\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"delivered\">\r\n                                                                Delivered\r\n                                                            </Dropdown.Item>\r\n                                                        </DropdownButton>\r\n                                                    </div>\r\n                                                    {/*  */}\r\n                                                </div>\r\n                                                <div className=\"col-lg-5 col-md-4 col-sm-2 mt-2\">\r\n                                                    <button type=\"button\" className=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={this.onchangeStatusHandler}>Save</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row d-flex justify-content-between bg-light pt-2  px-3 \">\r\n                                    <div className=\"col-lg-4 col-md-12 mb-2\">\r\n                                        <div className=\"fw-bold mb-2\"><i className=\"fa fa-user mx-1\"></i>Customer</div>\r\n                                        <div className=\"display-8\">{this.props.order.name}</div>\r\n                                        <div className=\"display-8\">{this.props.order.email}</div>\r\n                                        <div className=\"display-8\">{this.props.order.contactNo}</div>\r\n                                        <a href=\"/\">View Profile</a>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-12 mb-2\">\r\n                                        <div className=\"fw-bold mb-2\"><i className=\"fas fa-truck mx-1\"></i>Order Info</div>\r\n                                        <div className=\"display-8\">Shipping: {this.props.order.shipping.address} {\"  \"}\r\n                                            {this.props.order.shipping.province} {\"  \"} {this.props.order.shipping.city} {\"  \"}\r\n                                        </div>\r\n                                        <div className=\"display-8\">Zip:{this.props.order.shipping.zip}</div>\r\n                                        <div className=\"display-8\">Status:{this.props.order.shipping.status}</div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-12 mb-2\">\r\n                                        <div className=\"fw-bold mb-2\"><i className=\"fa fa-location mx-1\"></i>Deliver to</div>\r\n                                        <div className=\"display-8\">Address: {this.props.order.shipping.address} {\"  \"}\r\n                                            {this.props.order.shipping.province} {\"  \"} {this.props.order.shipping.city} {\"  \"}\r\n                                            {this.props.order.shipping.area}</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row d-flex justify-content-between bg-light\">\r\n                                    <div className=\"col-lg-12 col-md-12 p-3\">\r\n                                        <table className=\"table\">\r\n                                            <thead className=\"bg-info \">\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Product</th>\r\n                                                    <th scope=\"col\">Title</th>\r\n                                                    <th scope=\"col\">Variants</th>\r\n\r\n                                                    <th scope=\"col\">Unit Price</th>\r\n                                                    <th scope=\"col\">Quantity</th>\r\n                                                    <th scope=\"col\">Total</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.props.order.products.map((prod, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>\r\n                                                                <img className=\"img-fluid\" src={`${process.env.REACT_APP_URL}/img/${prod?.product?.images[0]}`}\r\n                                                                    height=\"100px\" width=\"100px\" alt=\"Sender\" />\r\n                                                            </td>\r\n                                                            <td>{prod.product.title}</td>\r\n\r\n                                                            <td>\r\n                                                                {/*  */}\r\n                                                                <table class=\"table\">\r\n\r\n                                                                    <tbody>\r\n                                                                        {console.log(this.state.variants)}\r\n                                                                        {this.state.variants.map((veri, index) => {\r\n                                                                            console.log(veri.product.title, prod.product.title);\r\n                                                                            if (veri.product._id === prod.product._id) {\r\n                                                                                if (veri.option === 'Color') {\r\n                                                                                    return <tr>\r\n                                                                                        <td key={index} className={`lead lh-sm fs-6 p-0 m-0 ${veri.tag.qty < 30 ? \"text-danger\" : \"\"}`} key={index}>{ntcjs.name(veri.tag.text)[1]}</td>\r\n                                                                                        <td className={veri.tag.qty < 30 ? \"text-danger\" : \"\"}>{veri.tag.qty}</td>\r\n                                                                                    </tr>\r\n                                                                                }\r\n                                                                                return (\r\n                                                                                    <tr>\r\n                                                                                        <td key={index} className={`lead lh-sm fs-6 p-0 m-0 ${veri.tag.qty < 30 ? \"text-danger\" : \"\"}`} >\r\n                                                                                            {veri.tag.text}\r\n                                                                                        </td>\r\n                                                                                        <td className={veri.tag.qty < 30 ? \"text-danger\" : \"\"}>{veri.tag.qty}</td>\r\n                                                                                    </tr>\r\n                                                                                );\r\n                                                                            }\r\n                                                                        })\r\n                                                                        }\r\n\r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                            </td>\r\n                                                            <td>{prod.price}</td>\r\n                                                            <td>{prod.qty}</td>\r\n                                                            <td>{prod.totalProductPrice} Rs</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div style={{ marginLeft: '75%' }} className=\"ml-5\">\r\n                                            <h3 className=\"lead\">SubTotal:{this.props.order.subtotal}</h3>\r\n                                            <h3 className=\"lead\">shippingCharges:{this.props.order.shipping.charges}</h3>\r\n                                            <h3 className=\"lead\">Totals:{this.props.order.subtotal + this.props.order.shipping.charges}</h3>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-8 col-md-12 back  pt-3\">\r\n                                    {console.log(this.props.order.payment.charge.paid)}\r\n                                    <div className=\"card rounded p-3\">\r\n                                        <div className=\"display-7 px-3 fw-bold mb-2\">Payment Info</div>\r\n                                        <div className=\"display-7 px-3 fw-bold mb-2\">{this.props.order.payment.charge.paid ? \"Payment Successful\" : \"Payment Failed\"}</div>\r\n                                        <div className=\"display-7 px-3\"> Amount: Rs. {this.props.order.payment.charge.amount}</div>\r\n                                        <div className=\"display-9 px-3\"><i className={`fab fa-cc-${this.props.order.payment?.charge.payment_method_details.card.brand}`}></i> {this.props.order.payment?.charge.payment_method_details.card.brand} Card **** **** {this.props.order.payment?.charge.payment_method_details.card.last4}</div>\r\n                                        <div className=\"display-9 px-3\">Business name: {this.props.order.payment?.charge.payment_method_details.card.brand}</div>\r\n                                        {/* {console.log({name:this.props.order.payment.charge.payment_method_details.card})} */}\r\n                                        <div className=\"display-9 px-3\">Phone: {this.props.order.shipping.contactNo}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    order: state.entities.orders.detailedOrder,\r\n    loading: state.entities.orders.loading,\r\n\r\n    // products:state.entities.products.list\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeOrderStatus: (id,data) => dispatch(changeOrderStatus(id,data))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);","import http from './httpservice';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/category`;\r\nexport function getAllCategories() {\r\n    return http.get(`${url}/allCategories`);\r\n}\r\n\r\n\r\nexport function createSubCategory(data){\r\n    return http.patch(`${url}/addSubCategory/${data.parent}`, {\r\n        subCategory:data.name.trim(),\r\n        description:data.description\r\n});\r\n};\r\n\r\nexport function deleteSubCategory(data) {\r\n    return http.delete(`${url}/deleteSubCategory/${data.category}/${data.subCategory}`);\r\n}\r\n\r\nconst AllServices = {\r\n    getAllCategories,\r\n    deleteSubCategory,\r\n    createSubCategory\r\n}\r\nexport default AllServices;","import { Field, Form, Formik } from 'formik';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport * as Yup from \"yup\";\r\nimport { getUserSelector, loadUser, updateMe } from '../storemini/reducers/user';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux';\r\nexport default function Profile() {\r\n    const me = useSelector(getUserSelector);\r\n    const dispatch = useDispatch();\r\n    const profileSchema = Yup.object().shape({\r\n        contactNo: Yup.string().required(\"Required\").label(\"Contact Number\"),\r\n        province: Yup.string().required(\"Required\").label(\"Province\"),\r\n        city: Yup.string().required(\"Required\").label(\"City\"),\r\n        address: Yup.string().required(\"Required\").label(\"Address\"),\r\n    });\r\n\r\n    return (\r\n        <div class=\"container rounded bg-white mt-5 mb-5\">\r\n            <div className=\"display-6 px-3 fw-bold mt-3\">Profile</div>\r\n            <Formik\r\n                initialValues={{\r\n                    contactNo: \"\",\r\n                    province: \"\",\r\n                    city: \"\",\r\n                    address: \"\"\r\n                }}\r\n                validationSchema={profileSchema}\r\n                onSubmit={(values) => {\r\n                    // console.log(values);\r\n                    dispatch(updateMe(values));\r\n                }}\r\n            >\r\n                {({ errors, touched }) => (\r\n                    <Form>\r\n                        {me && (\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 border-right\">\r\n                                    <div class=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                                        <img class=\"rounded-circle mt-3 \" width=\"150px\"\r\n                                            src={`${process.env.REACT_APP_URL}/img/${me.image}`}\r\n                                            alt='user img'\r\n                                        />\r\n                                        <span class=\"font-weight-bold\">{me?.name}</span>\r\n                                        <span class=\"text-black-50\">{me?.email}</span>\r\n                                        <span className='mx-5 '>\r\n                                            {/* <input type=\"file\" class=\"form-control-small btn-danger m-4\" /> */}\r\n                                        </span>\r\n                                        {/* */}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 border-right \">\r\n                                    <div class=\"p-3 py-5\">\r\n                                        <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                            <h4 class=\"text-right\">Profile Settings</h4>\r\n                                        </div>\r\n                                        <div class=\"row mt-2\">\r\n                                            <div class=\"col-md-12\"><label class=\"labels\">User Name</label><input readOnly type=\"text\" class=\"form-control\" value={me.name} /></div>\r\n                                        </div>\r\n                                        <div class=\"row mt-3\">\r\n                                            <div class=\"col-md-12\"><label class=\"labels\">Mobile Number</label>\r\n                                                <div class=\"mb-4 \">\r\n                                                    <Field\r\n                                                        name=\"contactNo\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder={me.contactNo}\r\n                                                    />\r\n                                                    {errors.contactNo && touched.contactNo ? (\r\n                                                        <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                                                            {errors.contactNo}\r\n                                                        </div>\r\n                                                    ) : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-5\">\r\n                                    <div class=\"p-3 py-5\">\r\n                                        <div class=\"col-md-12\"><label class=\"labels\">Province</label>\r\n                                            <div class=\"mb-4 \">\r\n                                                <Field\r\n                                                    name=\"province\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder={me.province}\r\n\r\n                                                />\r\n                                                {errors.province && touched.province ? (\r\n                                                    <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                                                        {errors.province}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\"><label class=\"labels\">City</label>\r\n                                            <div class=\"mb-4 \">\r\n                                                <Field\r\n                                                    name=\"city\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder={me.city}\r\n\r\n                                                />\r\n                                                {errors.city && touched.city ? (\r\n                                                    <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                                                        {errors.city}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\"><label class=\"labels\">Area</label>\r\n                                            <div class=\"mb-4 \">\r\n                                                <Field\r\n                                                    name=\"address\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder={me.address}\r\n\r\n                                                />\r\n                                                {errors.address && touched.address ? (\r\n                                                    <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                                                        {errors.address}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        {/* <div class=\"col-md-12\"><label class=\"labels\">Address</label><input type=\"text\" class=\"form-control\"  value=\"\" /></div> */}\r\n                                        <div class=\"mt-3\"><button class=\"btn btn-danger profile-button\" type=\"submit\">Save Profile</button></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { toast } from 'react-toastify';\r\nimport { deleteReview, getAllReviews, updateReview } from '../services/reviewServices';\r\n\r\nexport default function Reviews() {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [favorite, setFavorite] = useState([]);\r\n\r\n\r\n\r\n    const getAllReviewsHandler = async () => {\r\n        const { data } = await getAllReviews();\r\n        setReviews(data.data); console.log(data.data);\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (review) => {\r\n        console.log({ review });\r\n        const filtered = reviews.filter(rev => rev._id !== review._id);\r\n        setReviews(filtered);\r\n        await deleteReview(review._id);\r\n    }\r\n    const onselectHandler = async (e, id) => {\r\n        const preReviews=reviews;\r\n        // console.log(e.target.checked, id);\r\n        try {\r\n           const {data}= await  updateReview(e.target.checked,id);\r\n            e.target.checked=e.target.checked?false:true;\r\n            // console.log(data);\r\n            return setReviews(data.data);\r\n        } catch (error) {\r\n            toast.error(\"Something went Wrong Please Try again!!!\");\r\n            setReviews(preReviews);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getAllReviewsHandler();\r\n        return () => {\r\n            console.log(\"clean up reviews\");\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"display-6 px-3 fw-bold mt-3 \">Reviews</div>\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n            <table className=\"table mx-2 mt-3\">\r\n               \r\n                <thead>\r\n                    <tr className=\"bg-info\">\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Product</th>\r\n                        <th   scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Favorite</th>\r\n                        <th scope=\"col\">Rating</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Action</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                {reviews && reviews.map((rev, index) => {\r\n                    return (\r\n                        <tr>\r\n                            <td className=\"px-2\" style={{width:\"5%\"}}>{index + 1}</td>\r\n                            <td style={{width:\"25%\"}}>{rev.product?.title}</td>\r\n                            <td style={{width:\"25%\"}} >{rev.email}</td>\r\n                            <td className=\"px-5\" style={{width:\"10%\"}} >\r\n                                <div class=\"form-check form-switch\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\"  onChange={(e) => onselectHandler(e, rev._id)} id=\"flexSwitchCheckChecked\" checked={rev.favorite} />\r\n                                </div>\r\n                            </td>\r\n                            <td style={{width:\"5%\"}}><ReactStars\r\n                                value={rev.rating}\r\n                            />\r\n                            </td>\r\n                            <td style={{width:\"10%\"}}>{rev.createdAt.substring(0, 10)}</td>\r\n                            <td style={{width:\"10%\"}}><div class=\"d-grid gap-1 mx-auto\">\r\n                                <button class=\"btn btn-sm btn-info\" type=\"button\">Detail</button>\r\n                                <button onClick={() => onDeleteHandler(rev)} class=\"btn btn-sm btn-danger\" type=\"button\">Delate</button>\r\n                            </div></td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import http from './httpservice';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/order`;\r\nexport function getAllOrders() {\r\n    return http.get(`${url}/allOrders`);\r\n}\r\nexport function confirmTransaction(id) {\r\n    return http.patch(`${url}/${id}`, {\r\n        status:true\r\n});\r\n}\r\n\r\nconst AllServices = {\r\n    getAllOrders,\r\n    confirmTransaction,\r\n}\r\nexport default AllServices;","import React, { useEffect, useState } from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { toast } from 'react-toastify';\r\nimport { getAllOrders } from '../services/orderServices';\r\nimport { deleteReview, getAllReviews, updateReview } from '../services/reviewServices';\r\n\r\nexport default function Transactions({ orders ,setOrderForDetail}) {\r\n    // const [transactions , setTransactions] = useState([]);\r\n    // const getAllOrdersHandler = async () => {\r\n    //     const { data } = await getAllOrders();\r\n    //     console.log(data);\r\n    // }\r\n    useEffect(() => {\r\n        // getAllOrders();\r\n        return () => {\r\n            console.log(\"clean up reviews\");\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"display-6 px-3 fw-bold mt-3 \">All Transactions</div>\r\n            </div>\r\n             <div class=\"table-responsive\">\r\n            <table class=\"table mt-3 mx-4\">\r\n               \r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#ID</th>\r\n                        <th scope=\"col\">Paid</th>\r\n                        <th scope=\"col\">Method</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                {orders && orders.map((order, index) => {\r\n                    const {charge}=order.payment;\r\n                    console.log(charge.amount);\r\n                    return (\r\n                        <tr>\r\n                            <td  style={{width:\"10%\"}}>{charge.id}</td>\r\n                            <td style={{width:\"10%\"}}>Rs.{charge.amount}</td>\r\n                            <td style={{width:\"10%\"}}><i className={`fab fa-cc-${charge.payment_method_details.card.brand} fa-3x`}></i> {charge.payment_method_details.card.brand}</td>\r\n                            \r\n                            <td style={{width:\"10%\"}}>{order.createdAt.substring(0, 10)}</td>\r\n                            <td  style={{width:\"10%\"}}><div class=\"d-grid gap-1 mx-auto\">\r\n                                <button class=\"btn btn-sm btn-info\" onClick={()=>setOrderForDetail(order)} type=\"button\">Detail</button>\r\n                                <button  class=\"btn btn-sm btn-danger\" type=\"button\">Delate</button>\r\n                            </div></td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </table>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\nimport \"./styles/forgot.css\";\r\nimport './styles/login.css';\r\nimport { Link } from \"react-router-dom\";\r\nconst loginSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Required\").label(\"Password\"),\r\n  confirmPassword: Yup.string().required(\"Required\").label(\"ConfirmPassword\"),\r\n});\r\n\r\n\r\nexport default function ResetPassword({ onResetPassword ,match}) {\r\n  return (\r\n    <div className=\"container pt-5 mt-5 pb-5 font_fam w-25\">\r\n      <h3 className=\"submit-content fw-bold text-center mt-5\">Reset Password</h3>\r\n      <Formik\r\n        initialValues={{\r\n          password: \"\",\r\n          confirmPassword:\"\"\r\n        }}\r\n        validationSchema={loginSchema}\r\n        onSubmit={(values) => {\r\n          values.token=match.params.token;\r\n          onResetPassword(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div className=\"mb-4 mt-5\">\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"password\"\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <div className=\"alert alert-danger  p-2 p-2 \" role=\"alert\">\r\n                  {errors.password}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"confirmPassword\"\r\n              />\r\n              {errors.confirmPassword && touched.confirmPassword ? (\r\n                <div className=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.confirmPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"cart mt-4 align-items-center\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn text-uppercase w-100 creat_btn message_look fw-bold \"\r\n              >\r\n                  RESET\r\n              </button>\r\n            </div>\r\n            <Link className=\"creat_look text-center fw-bold mb-4\" to=\"/login\">\r\n              <h5 className=\" mb-2 mt-5 creat_look fw-bold \">LOGIN</h5>\r\n            </Link>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\nimport \"./styles/forgot.css\"\r\nimport { Link } from \"react-router-dom\";\r\nconst forgotSchema = Yup.object().shape({\r\n  email: Yup.string().email().required(\"Required\").label('Username'),\r\n});\r\n\r\nexport default function Forgot({onForgot}) {\r\n  return (\r\n    <div className=\"container pt-5 mt-5 pb-5  w-25\">\r\n      <h3 className=\"submit-content fw-bold text-center mt-5\">Reset Password</h3>\r\n      <div className=\"d-flex justify-content-center pt-2\">\r\n        <p className=\"message_look\">Remember your password?</p>\r\n        <Link className=\" text-center\" to=\"/login\">\r\n          <h5 className=\"creat_look fw-bold\">Login</h5>\r\n        </Link>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n        }}\r\n        validationSchema={forgotSchema}\r\n        onSubmit={(values) => {\r\n          // console.log(values );\r\n          onForgot(values.email);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div className=\"mb-4\">\r\n              <Field\r\n                name=\"email\"\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <div className=\"alert alert-danger p-2\" role=\"alert\">\r\n                  {errors.email}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"cart mt-4 align-items-center\">\r\n              <button type=\"submit\" className=\"btn text-uppercase w-100 creat_btn message_look fw-bold \">\r\n                SEND RESET EMAIL\r\n              </button>\r\n            </div>\r\n            <Link className=\"creat_look text-center fw-bold mb-4\" to=\"/\">\r\n              <h5 className=\" mb-2 mt-5 creat_look fw-bold\"> Go Back</h5>\r\n            </Link>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","import http from './httpservice';\r\nconst url =`${process.env.REACT_APP_URL}/api/v1/basket`;\r\nexport function getAllBaskets() {\r\n    return http.get(`${url}/allBaskets`);\r\n}\r\nexport function deleteBasket(id) {\r\n    return http.delete(`${url}/delete/${id}`);\r\n  }\r\n  export function addNewBasket(data) {\r\n    return http.post(`${url}/addBasket`,data);\r\n}\r\nexport function updateBasket(status,id) {\r\n    return http.patch(`${url}/update/${id}`, {\r\n        status\r\n});\r\n}\r\n\r\nconst AllServices = {\r\n    getAllBaskets,\r\n    deleteBasket,\r\n    addNewBasket,\r\n    updateBasket\r\n}\r\nexport default AllServices;","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './styles/login.css';\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { addNewBasket, deleteBasket, getAllBaskets, updateBasket } from \"../services/basketService\";\r\nimport { toast } from \"react-toastify\";\r\nconst basketSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\").label(\"name\"),\r\n  price: Yup.number().required(\"Required\").label(\"Price\"),\r\n});\r\nexport default function Baskets() {\r\n  const [image, setImage] = useState('select parent');\r\n  const [baskets, setBaskets] = useState([]);\r\n  useEffect(() => {\r\n    getAllBasketsHandler();\r\n  }, [])\r\n\r\n  const getAllBasketsHandler = async () => {\r\n    try {\r\n      const { data } = await getAllBaskets();\r\n      setBaskets(data.data);\r\n      console.log(data.data);\r\n    } catch (err) {\r\nconsole.log(err);\r\n    }\r\n  }\r\n  const handleChange = (e) => {\r\n    // setParent(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n  const mainHandleChange = () => {\r\n    // setParent(e.target.value);\r\n    // console.log(e.target.value);\r\n    // setMain(main?false:true);\r\n  }\r\n  const imageHandler = (picture) => {\r\n    console.log(picture[0]);\r\n    setImage(picture);\r\n  }\r\n  const onDeleteHandler = async (basket) => {\r\n    console.log({ review: basket });\r\n    const filtered = baskets.filter(rev => rev._id !== basket._id);\r\n    setBaskets(filtered);\r\n    await deleteBasket(basket._id);\r\n    getAllBasketsHandler();\r\n}\r\nconst onselectHandler = async (e, id) => {\r\n    const preBaskets=[...baskets];\r\n    console.log(e.target.checked, id);\r\n    try {\r\n       const {data}= await  updateBasket(e.target.checked,id);\r\n       e.target.checked=e.target.checked?false:true;\r\n        // console.log(data);\r\n        return setBaskets(data.data);\r\n    } catch (error) {\r\n        toast.error(\"Something went Wrong Please Try again!!!\");\r\n        setBaskets(preBaskets);\r\n    }\r\n}\r\n  const addNewBasketHandler = async (values) => {\r\n    try {\r\n      const { data } = await addNewBasket(values);\r\n      console.log(data);\r\n      setBaskets(data.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div class=\"container-fluid pb-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-9 .col-md-9\">\r\n            <div class=\"display-6 px-3 fw-bold mt-3\">Baskets</div>\r\n            <div class=\"display-7 px-3\">Add or delete a Baskets</div>\r\n          </div>\r\n          <div class=\"col-lg-3 .col-md-12 mt-4\">\r\n            <div class=\"form-outline \">\r\n              <input\r\n                type=\"search\"\r\n                id=\"form1\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"container-fluid bg_color pt-3  rounded h-100\">\r\n        <div class=\"card w-100 rounded\">\r\n          <div class=\"row d-flex justify-content-around  px-3\">\r\n            <div class=\"col-lg-3 col-md-3 mt-3 pb-5\">\r\n              <Formik\r\n                initialValues={{\r\n                  name: \"\",\r\n                  parent: \"select parent\"\r\n                }}\r\n                validationSchema={basketSchema}\r\n                onSubmit={(values) => {\r\n                  const form = new FormData();\r\n                  form.append(\"title\", values.name);\r\n                  form.append(\"price\", values.price);\r\n                  form.append(\"image\", image[0]);\r\n                  addNewBasketHandler(form);\r\n                }}\r\n              >\r\n                {({ errors, touched }) => (\r\n                  <Form>\r\n                    <div class=\"mb-4 mt-2 \">\r\n                      <Field\r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                      {errors.name && touched.name ? (\r\n                        <div class=\"alert alert-danger  p-2\" parent=\"alert\">\r\n                          {errors.name}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div class=\"mb-4\">\r\n                      <Field\r\n                        name=\"price\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Price\"\r\n                      />\r\n                      {errors.price && touched.price ? (\r\n                        <div class=\"alert alert-danger  p-2\" parent=\"alert\">\r\n                          {errors.price}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div class=\"mb-4\">\r\n                      <ImageUploader\r\n                        onChange={imageHandler}\r\n                        withPreview\r\n                        withIcon\r\n                        buttonText='Choose image'\r\n                        singleImage\r\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                        maxFileSize={5242880}\r\n                      />\r\n                    </div>\r\n                    <div class=\"mb-4  text-primary\">\r\n                    </div>\r\n                    <div class=\"cart mt-4 align-items-center\">\r\n                      <button type=\"submit\" class=\"lead btn text-uppercase w-100 creat_btn \">\r\n                        Add Basket\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n            <div class=\"col-lg-9 col-md-12 p-3 mt-2 \">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"bg-info text-white \">\r\n                    <tr>\r\n                      <th scope=\"col bold\">#</th>\r\n                      <th scope=\"col\">Basket</th>\r\n                      <th scope=\"col\">Title</th>\r\n                      <th scope=\"col\">Price</th>\r\n                      <th scope=\"col\">Status</th>\r\n                      {/* <th scope=\"col\">Order</th> */}\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {console.log({baskets})}\r\n                    {baskets?.map((basket, index) => {\r\n                      return <tr key={index}>\r\n                        <td>\r\n                          <div class=\"form-check\">\r\n                            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                              {index + 1}\r\n                            </label>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <img className=\"img-fluid\" src={`${process.env.REACT_APP_URL}/img/${basket.image}`}\r\n                            height=\"40px\" width=\"40px\" alt=\"basket img\" />\r\n                        </td>\r\n                        <td>{basket.title}</td>\r\n                        <td>{basket.price}</td>\r\n                        <td className=\"px-5\" style={{width:\"10%\"}} >\r\n                                <div class=\"form-check form-switch\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\"  onChange={(e) => onselectHandler(e, basket._id)} id=\"flexSwitchCheckChecked\" checked={basket.status} />\r\n                                </div>\r\n                            </td>                        <td>\r\n                          {\" \"}\r\n                          <button\r\n                            class=\"btn btn-light text-light bg-danger  border\"\r\n                            type=\"button\"\r\n                            aria-expanded=\"false\"\r\n                          onClick={()=>onDeleteHandler(basket)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n\r\n                        </td>\r\n                      </tr>\r\n                    })}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './styles/login.css';\r\nimport { updatePassword } from \"../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\nconst passwordSchema = Yup.object().shape({\r\n  currentPassword: Yup.string().required(\"Required\").label(\"currentPassword\"),\r\n  newPassword: Yup.string().required(\"Required\").label(\"NewPassword\"),\r\n  confirmNewPassword: Yup.string().required(\"Required\").label(\"ConfirmNewPassword\"),\r\n});\r\nexport default function UpdatePassword() {\r\n  const updatePasswordHandler=async (values)=>{\r\n    try {\r\n        const {data}=await updatePassword(values);\r\n        console.log(data);\r\n        toast.success(\"Password Successfully Updated !!!\")\r\n    } catch (error) {\r\n        toast.error(\"Please enter Correct Current Password !\");\r\n    }\r\n  }\r\n  return (\r\n    <div class=\"container pt-5 mt-5 pb-5 font_fam w-auto\">\r\n      <h3 class=\"submit-content fw-bold text-center mt-5\">UPDATE PASSWORD</h3>\r\n      <Formik\r\n        initialValues={{\r\n          currentPassword: \"\",\r\n          newPassword: \"\",\r\n          confirmNewPassword:\"\"\r\n        }}\r\n        validationSchema={passwordSchema}\r\n        onSubmit={(values) => {\r\n          updatePasswordHandler(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div class=\"mb-4 mt-5 \">\r\n              <Field\r\n                name=\"currentPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"currentPassword\"\r\n              />\r\n              {errors.currentPassword && touched.currentPassword ? (\r\n                <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.currentPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div class=\"mb-4\">\r\n              <Field\r\n                name=\"newPassword\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"newPassword\"\r\n              />\r\n              {errors.newPassword && touched.newPassword ? (\r\n                <div class=\"alert alert-danger  p-2 p-2 \" role=\"alert\">\r\n                  {errors.newPassword}\r\n                </div>\r\n              ) : null}\r\n            </div> <div class=\"mb-4\">\r\n              <Field\r\n                name=\"confirmNewPassword\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"confirmNewPassword\"\r\n              />\r\n              {errors.confirmNewPassword && touched.confirmNewPassword ? (\r\n                <div class=\"alert alert-danger  p-2 p-2 \" role=\"alert\">\r\n                  {errors.confirmNewPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          <div class=\"cart mt-4 align-items-center\">\r\n              <button type=\"submit\" class=\"btn text-uppercase w-100 creat_btn \">\r\n                Update Password\r\n              </button>\r\n            </div>\r\n            <Link class=\"creat_look text-center fw-bold mb-4\" to=\"/\">\r\n              <h5 class=\" mb-2 mt-5 creat_look\">Go Back</h5>\r\n            </Link>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","import { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport './styles/login.css';\r\nimport { updatePassword } from \"../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { addUser } from \"../services/UsersService\";\r\n\r\nexport default function AddUser() {\r\n  const history=useHistory();\r\n\r\n  const userSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(6)\r\n      .max(50)\r\n      .required(\"Required\").label('Username'),\r\n    password: Yup.string()\r\n      .min(6)\r\n      .max(50\r\n        )\r\n      .required(\"Required\").label('Password'),\r\n      confirmPassword: Yup.string()\r\n      .min(6)\r\n      .max(50)\r\n      .required(\"Required\").label('PasswordConfirm'),\r\n    email: Yup.string().email().required(\"Required\").label('Email'),\r\n    contactNo: Yup.string().required(\"Required\").label('Contact number'),\r\n  \r\n  });\r\n  const addUserHandler=async(values)=>{\r\n    try {\r\n      await addUser(values);\r\n      history.push('/users');\r\ntoast.success(\"User Successfully added\");\r\n    } catch (error) {\r\n      toast.error('Operation Failed !!!');\r\n    }\r\n  }\r\n  const updatePasswordHandler=async (values)=>{\r\n    try {\r\n        const {data}=await updatePassword(values);\r\n        console.log(data);\r\n        toast.success(\"Password Successfully Updated !!!\")\r\n    } catch (error) {\r\n        toast.error(\"Please enter Correct Current Password !\");\r\n    }\r\n  }\r\n  return (\r\n    <div class=\"container pt-5 mt-5 pb-5 font_fam w-auto\">\r\n      <h3 class=\"submit-content fw-bold text-center mt-5\">ADD NEW USER</h3>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          contactNo:\"\",\r\n          password:\"\",\r\n          confirmPassword:\"\"\r\n        }}\r\n        validationSchema={userSchema}\r\n        onSubmit={(values) => {\r\n          addUserHandler(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div class=\"mb-4 mt-5 \">\r\n              <Field\r\n                name=\"name\"\r\n                className=\"form-control\"\r\n                placeholder=\"Username\"\r\n              />\r\n              {errors.name && touched.name ? (\r\n                <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.name}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <Field\r\n                name=\"contactNo\"\r\n                className=\"form-control\"\r\n                placeholder=\"contactNo\"\r\n              />\r\n              {errors.contactNo && touched.contactNo ? (\r\n                <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.contactNo}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div class=\"mb-4\">\r\n              <Field\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <div class=\"alert alert-danger  p-2\" role=\"alert\">\r\n                  {errors.email}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div class=\"mb-4\">\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"password\"\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <div class=\"alert alert-danger  p-2 p-2 \" role=\"alert\">\r\n                  {errors.password}\r\n                </div>\r\n              ) : null}\r\n            </div> <div class=\"mb-4\">\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"confirmPassword\"\r\n              />\r\n              {errors.confirmPassword && touched.confirmPassword ? (\r\n                <div class=\"alert alert-danger  p-2 p-2 \" role=\"alert\">\r\n                  {errors.confirmPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          <div class=\"cart mt-4 align-items-center\">\r\n              <button type=\"submit\" class=\"btn text-uppercase w-100 creat_btn \">\r\n                Add New User\r\n              </button>\r\n            </div>\r\n            <Link class=\"creat_look text-center fw-bold mb-4\" to=\"/\">\r\n              <h5 class=\" mb-2 mt-5 creat_look\">Go Back</h5>\r\n            </Link>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"../api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"customers\",\r\n  initialState: {\r\n    list: [],\r\n    loading: false,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    customersRequested: (customer, action) => {\r\n      customer.loading = true;\r\n    },\r\n    customersReceived: (customer, action) => {\r\n      console.log(action.payload);\r\n      customer.list = action.payload;\r\n      customer.loading = false;\r\n      customer.lastFetch = Date.now();\r\n    },\r\n    customerRequestFailed: (customer, action) => {\r\n      customer.loading = false;\r\n    },\r\n    customerAddressAdded: (customer, action) => {\r\n      customer.list = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { customersReceived, customersRequested, customerRequestFailed, customerAddressAdded } =\r\n  slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\n\r\nexport const loadCustomers = () => (dispatch, getState) => {\r\n  // const { lastFetch } = getState().entities.customers;\r\n  // const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  // if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url: \"user/getAllCustomer\",\r\n      onStart: customersRequested.type,\r\n      onSuccess: customersReceived.type,\r\n      onError: customerRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n// export const login = (list) => (dispatch, getState) => {\r\n//   dispatch(\r\n//     apiCallBegan({\r\n//       url: \"customer/addAddress\",\r\n//       method: \"post\",\r\n//       list,\r\n//       message: \"log in successfully !!!\",\r\n//       onStart: customerRequested.type,\r\n//       onSuccess: customersReceived.type,\r\n//       onError: customerRequestFailed.type,\r\n//     })\r\n//   );\r\n// };\r\n\r\n// export const addCustomerAddress = (customer, payment) => (dispatch, getState) => {\r\n//   dispatch(\r\n//     apiCallBegan({\r\n//       url: \"customer/addAddress\",\r\n//       method: \"post\",\r\n//       list: { customer, payment },\r\n//       message: \"Your Address added successfully !!!\",\r\n//       onSuccess: customerAddressAdded.type,\r\n//       onError: customerRequestFailed.type,\r\n//     })\r\n//   );\r\n// };\r\n\r\n// Selector\r\nexport const getAllCustomersSelector = createSelector(\r\n  (state) => state.entities.customers.list,\r\n  (customers) => customers\r\n);\r\nexport const getLoadingSelector = createSelector(\r\n  (state) => state.entities.customer.loading,\r\n  (loading) => loading\r\n);\r\n\r\n// export const getcustomerBycustomer = (customerId) =>\r\n//   createSelector(\r\n//     (state) => state.entities.customer.list,\r\n//     (customer) => customer.filter((item) => item.customerId === customerId)\r\n//   );\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { deleteReview, getAllReviews, updateReview } from '../services/reviewServices';\r\nimport { deleteUser, getStaff } from '../services/UsersService';\r\nimport { getAllCustomersSelector, loadCustomers } from '../storemini/reducers/customers';\r\n\r\nexport default function Customers() {\r\n    const [favorite, setFavorite] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const staff = useSelector(getAllCustomersSelector);\r\n\r\n    const getStaffHandler = async () => {\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (user) => {\r\n        console.log({ user });\r\n        const preUsers = staff;\r\n        const filtered = staff.filter(rev => rev._id !== user._id);\r\n        // setStaff(filtered);\r\n        try {\r\n            await deleteUser(user.name);\r\n        } catch (error) {\r\n            toast.error('Something went wrong User Not Deleted !!!');\r\n            // setStaff(preUsers)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCustomers());\r\n        //    alert( JSON.stringify(staff));\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"display-6 px-3 fw-bold mt-3 \">All Customers</div>\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n                <table className=\"table mx-2 mt-3\">\r\n                    <thead>\r\n                        <tr className=\"bg-info\">\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Username</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">CreatedAt</th>\r\n                            <th scope=\"col\">Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    {staff && staff.map((user, index) => {\r\n                        console.log(user);\r\n                        return (\r\n                            <tr>\r\n                                <td className=\"px-2\" style={{ width: \"5%\" }}>{index + 1}</td>\r\n                                <td style={{ width: \"25%\" }}>{user.name}</td>\r\n                                <td style={{ width: \"25%\" }} >{user.email}</td>\r\n                                <td style={{ width: \"10%\" }}>{user.createdAt.substring(0, 10)}</td>\r\n                                <td style={{ width: \"10%\" }}><div class=\"d-grid gap-1 mx-auto\">\r\n                                    <button class=\"btn btn-sm btn-info\" type=\"button\">Detail</button>\r\n                                    <button onClick={() => onDeleteHandler(user)} class=\"btn btn-sm btn-danger\" type=\"button\">Delate</button>\r\n                                </div></td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Field, useFormik } from \"formik\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport * as Yup from \"yup\";\r\nimport Variants from \"./common/Variant\";\r\nimport Media from \"./common/MediaComponent\";\r\nimport { CategoryContext } from \"./contexts/categoryContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getProduct } from \"../services/productServices\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getEditProductSelector } from \"../storemini/reducers/products\";\r\n///////////////////////////////////////\r\n// import { productData } from './data'\r\n//import \"./utils/style/addProductComponent.css\";\r\n\r\nconst EditProduct = () => {\r\n  const product = useSelector(getEditProductSelector);\r\n  const [description, setDescription] = useState(product.description);\r\n  const [imgList, setImgList] = useState(product.images);\r\n  const [images, setImages] = useState();\r\n\r\n  const [variantsData, setVariantsData] = useState();\r\n  const { categories, deleteSubCategoryHandler, createSubCategoryHandler } =\r\n    useContext(CategoryContext);\r\n  const [parent, setParent] = useState(product.category.split('/')[0]);\r\n  const [children, setChildren] = useState([]);\r\n  const [child, setChild] = useState(product.category.split('/')[1]);\r\n\r\n  const handleParentChange = (e) => {\r\n    setParent(e.target.value);\r\n    console.log(categories.find((cate) => cate.category === e.target.value));\r\n    setChildren(\r\n      categories.find((cate) => cate.category === e.target.value).subCategories\r\n    );\r\n  };\r\n  const handleChildChange = (e) => {\r\n    setChild(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: product.title,\r\n      price: product.price,\r\n      category: product.category,\r\n      costPerItem: product.costPerItem,\r\n      chargeTax: product.chargeTax,\r\n      // stockKeepingUnit: \"\",\r\n      // barcode: \"\",\r\n      trackQuantity: product.trackQuantity,\r\n      sellOutofStock: product.sellOutofStock,\r\n      availableQuantity: product.availableQuantity,\r\n      physicalProduct: product.physicalProduct,\r\n      weight: product.weight,\r\n      variants: {},\r\n    },\r\n    validationSchema: Yup.object({\r\n      // name: Yup.string()\r\n      //     .max(15, \"Must be less than 15 characters\")\r\n      //     .min(3, \"name should be more than 3 characters\")\r\n      //     .required('REQUIRED'),\r\n      // description: Yup.string()\r\n      //     .max(1500, \"Description should not be more than 1500 characters\")\r\n      //     .min(50, 'Description should be of minimum 100 words')\r\n      //     .required(\"Required\")\r\n    }),\r\n    onSubmit: (values) => {\r\n      const form = new FormData();\r\n      values.description = description;\r\n      values.category = `${parent}/${child}`;\r\n      values.variants = variantsData;\r\n      console.log({ variantsData });\r\n      values.imgNames = imgList;\r\n      // values.images = images;\r\n      images.forEach((img) => {\r\n        form.append(\"images\", img);\r\n      });\r\n      // for (const key in values) form.append(key, values[key]);\r\n      // addProduct(values, form);\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    console.log(product);\r\n  }, [])\r\n  return (\r\n    <div className=\"container px-3\">\r\n      <div className=\"display-6 px-3 fw-bold mt-3 \">Edit Product</div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label className=\"title pb-2\" htmlFor=\"title\">\r\n          Title\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          defaultValue={product.title}\r\n          {...formik.getFieldProps(\"title\")}\r\n        />\r\n        {formik.touched.title && formik.errors.title ? (\r\n          <div>{formik.errors.title}</div>\r\n        ) : null}\r\n        <div class=\"mb-4  text-primary\">\r\n          {/* <input type='select'  component=\"select\" name=\"parent\" value={parent}\r\n                       className={\"form-control\"} onChange={handleParentChange}>\r\n                        <option value={'select parent'}>Select Parent</option>\r\n                        {categories?.map(cate => {\r\n                          return <option value={cate.category}>{cate.category}</option>\r\n                        })}\r\n                      </input> */}\r\n          <div className=\"select-container w-50\">\r\n            <label className=\"title pb-2\" htmlFor=\"price\">\r\n              Category\r\n            </label>\r\n            <select className=\"form-control\" onChange={handleParentChange}>\r\n              <option value={parent}>{parent}</option>\r\n              {categories?.map((cate) => (\r\n                <option value={cate.category}>{cate.category}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"select-container w-50\">\r\n            <label className=\"title py-2\" htmlFor=\"price\">\r\n              Sub Category\r\n            </label>\r\n            <select className=\"form-control\" onChange={handleChildChange}>\r\n              <option value={child}>{child}</option>\r\n              {children?.map((cate) => (\r\n                <option value={cate.name}>{cate.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* <input type='select'  component=\"select\" name=\"child\" value={child}\r\n                       className={\"form-control\"} onChange={handleChildChange}>\r\n                        <option value={'select child'}>Select Child</option>\r\n                        {children?.map(cate => {\r\n                          return <option value={cate.name}>{cate.name}</option>\r\n                        })}\r\n                      </input> */}\r\n          {/* {errors.parent && touched.parent ? (\r\n                        <div class=\"alert alert-danger  p-2\" parent=\"alert\">\r\n                          {errors.parent}\r\n                        </div>\r\n                      ) : null} */}\r\n        </div>\r\n\r\n        {/* .............................................. */}\r\n        <label className=\"title pb-2\" htmlFor=\"title\">\r\n          Discription\r\n        </label>\r\n\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data={description}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setDescription(data);\r\n          }}\r\n        />\r\n        <Media\r\n          setImagesList={(imgList) => setImgList(imgList)}\r\n          setImages={(images) => setImages(images)}\r\n        />\r\n        {/* .............................................. */}\r\n        <div className=\"h4\">Pricing</div>\r\n        <label className=\"title pb-2\" htmlFor=\"price\">\r\n          Price\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          type=\"number\"\r\n          defaultValue={product.price}\r\n          {...formik.getFieldProps(\"price\")}\r\n        />\r\n        {formik.touched.price && formik.errors.price ? (\r\n          <div>{formik.errors.price}</div>\r\n        ) : null}\r\n        {/* .............................................. */}\r\n        {/* \r\n        <label className=\"title pb-2\" htmlFor=\"compareAtPrice\">\r\n          Compare at price\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"compareAtPrice\"\r\n          name=\"compareAtPrice\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"compareAtPrice\")}\r\n        />\r\n        {formik.touched.compareAtPrice && formik.errors.compareAtPrice ? (\r\n          <div>{formik.errors.compareAtPrice}</div>\r\n        ) : null} */}\r\n\r\n        {/* .............................................. */}\r\n        {/* <label className=\"title pb-2\" htmlFor=\"costPerItem\">\r\n          Cost per item\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"costPerItem\"\r\n          name=\"costPerItem\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"costPerItem\")}\r\n        />\r\n        {formik.touched.costPerItem && formik.errors.costPerItem ? (\r\n          <div>{formik.errors.costPerItem}</div>\r\n        ) : null} */}\r\n\r\n        <label className=\"title pb-2 px-2\" htmlFor=\"chargeTax\">\r\n          Charge Tax\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"chargeTax\"\r\n          name=\"chargeTax\"\r\n          type=\"checkbox\"\r\n          {...formik.getFieldProps(\"chargeTax\")}\r\n          checked={product.chargeTax}\r\n        />\r\n        {formik.touched.chargeTax && formik.errors.chargeTax ? (\r\n          <div>{formik.errors.chargeTax}</div>\r\n        ) : null}\r\n\r\n        {/* .............................................. */}\r\n        {/* <div className=\"h4\">Inventory</div>\r\n        <label className=\"title pb-2\" htmlFor=\"stockKeepingUnit\">\r\n          Stock Keeping Unit(SKU)\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"stockKeepingUnit\"\r\n          name=\"stockKeepingUnit\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps(\"stockKeepingUnit\")}\r\n        />\r\n        {formik.touched.stockKeepingUnit && formik.errors.stockKeepingUnit ? (\r\n          <div>{formik.errors.stockKeepingUnit}</div>\r\n        ) : null}\r\n\r\n        <label className=\"title pb-2\" htmlFor=\"barcode\">\r\n          Barcode\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"barcode\"\r\n          name=\"barcode\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps(\"barcode\")}\r\n        />\r\n        {formik.touched.barcode && formik.errors.barcode ? (\r\n          <div>{formik.errors.barcode}</div>\r\n        ) : null} */}\r\n\r\n        <br />\r\n        {/* .............................................. */}\r\n        {/* <label className=\"title pb-2 px-2\" htmlFor=\"trackQuantity\">\r\n          Track Quantity\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"trackQuantity\"\r\n          name=\"trackQuantity\"\r\n          type=\"checkbox\"\r\n          {...formik.getFieldProps(\"trackQuantity\")}\r\n        />\r\n        {formik.touched.trackQuantity && formik.errors.trackQuantity ? (\r\n          <div>{formik.errors.trackQuantity}</div>\r\n        ) : null}\r\n        <br /> */}\r\n        {/* .............................................. */}\r\n\r\n        {/* <label className=\"title p-2\" htmlFor=\"sellOutofStock\">\r\n          Sell Out of Stock\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"sellOutofStock\"\r\n          name=\"sellOutofStock\"\r\n          type=\"checkbox\"\r\n          {...formik.getFieldProps(\"sellOutofStock\")}\r\n        />\r\n        {formik.touched.sellOutofStock && formik.errors.sellOutofStock ? (\r\n          <div>{formik.errors.sellOutofStock}</div>\r\n        ) : null}\r\n        <br /> */}\r\n        {/* .............................................. */}\r\n        {/* <label className=\"title pb-2\" htmlFor=\"availableQuantity\">\r\n          Available Quantity\r\n        </label>\r\n        <input\r\n          className=\"form-control mb-1 w-50\"\r\n          id=\"availableQuantity\"\r\n          name=\"availableQuantity\"\r\n          type=\"number\"\r\n          {...formik.getFieldProps(\"availableQuantity\")}\r\n        />\r\n        {formik.touched.availableQuantity && formik.errors.availableQuantity ? (\r\n          <div>{formik.errors.availableQuantity}</div>\r\n        ) : null} */}\r\n\r\n        <div className=\"h4\">Shipping</div>\r\n\r\n        <label className=\"title p-2\" htmlFor=\"physicalProduct\">\r\n          Physical Product\r\n        </label>\r\n        <input\r\n          className=\"form-check-input mb-1\"\r\n          id=\"physicalProduct\"\r\n          name=\"physicalProduct\"\r\n          type=\"checkbox\"\r\n          defaultValue={product.shipping}\r\n          {...formik.getFieldProps(\"physicalProduct\")}\r\n        />\r\n        {formik.touched.physicalProduct && formik.errors.physicalProduct ? (\r\n          <div>{formik.errors.physicalProduct}</div>\r\n        ) : null}\r\n\r\n        <br />\r\n        {/* .............................................. */}\r\n        <label className=\"title pb-2\" htmlFor=\"weight\">\r\n          Weight\r\n        </label>\r\n        <input\r\n          className=\"form-control w-50\"\r\n          id=\"weight\"\r\n          name=\"weight\"\r\n          type=\"number\"\r\n          // defaultValue={product.we}\r\n          {...formik.getFieldProps(\"weight\")}\r\n        />\r\n        {formik.touched.weight && formik.errors.weight ? (\r\n          <div>{formik.errors.weight}</div>\r\n        ) : null}\r\n\r\n\r\n        {/* .............................................. */}\r\n        <Variants\r\n          sendVariantsData={(variantsData) => setVariantsData(variantsData)}\r\n          imgList={imgList}\r\n        />\r\n        <button className=\"btn btn-primary mb-3\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default EditProduct;","import React, { useEffect, useState } from 'react';\r\nimport Home from './Home';\r\nimport NavBar from './common/NavBar';\r\nimport SideNavBar from './common/SideNavBar';\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport AddProduct from './addProductComponent';\r\nimport ShowProducts from './ShowProducts';\r\nimport Login from './Login';\r\nimport Orders from './Orders';\r\nimport { UserContext } from './contexts/UserContext';\r\nimport NotFound from './NotFound';\r\nimport Staff from './Staff';\r\nimport Categories from './Categories';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { forgotPassword, login, resetPassword } from '../services/authService';\r\nimport { addNewProduct, addNewProductImages, deleteProduct, getAllProducts } from '../services/productServices';\r\nimport { getMe } from '../services/UsersService';\r\nimport OrderDetail from './OrderDetail';\r\nimport { createSubCategory, deleteSubCategory, getAllCategories } from '../services/categoryService';\r\nimport { CategoryContext } from './contexts/categoryContext';\r\nimport Profile from './Profile';\r\nimport Reviews from './Reviews';\r\nimport Transaction from './Transactions';\r\nimport ResetPassword from './ResetPassword';\r\nimport Forgot from './Forgot';\r\nimport Baskets from './Baskets';\r\nimport UpdatePassword from './UpdatePassword';\r\nimport AddUser from './AddUser';\r\nimport Customers from './Customers';\r\nimport EditProduct from './EditProduct';\r\nexport default function Main() {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState();\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n    }\r\n    return () => {\r\n      console.log('clean up');\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('clean up');\r\n    }\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    getAllProductHandler();\r\n    getMeHandler();\r\n    getAllCategoriesHandler();\r\n    return () => {\r\n      console.log('clean up');\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = async (user) => {\r\n    try {\r\n      const { data } = await login(user)\r\n      localStorage.setItem(\"jwt\", data.token);\r\n      toast.success(\"logged in successfully !!!\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      // history.push('/');\r\n      window.location = '/';\r\n    } catch (error) {\r\n      toast.error(\"Incorrect username or password\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n\r\n    }\r\n  }\r\n  const forgotHandler = async (email) => {\r\n    const data = await forgotPassword(email)\r\n    if (data.data.status === 'success')\r\n      toast.success(\"Email successfully sent Please check your mail\");\r\n    else {\r\n      toast.error(data.data.message);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const getMeHandler = async () => {\r\n    const { data } = await getMe();\r\n    // console.log({ data });\r\n    setUser(data);\r\n  }\r\n  const getAllCategoriesHandler = async () => {\r\n    const { data } = await getAllCategories();\r\n    // console.log(data.data);\r\n    setCategories(data.data);\r\n  }\r\n  const getAllProductHandler = async () => {\r\n    try {\r\n      const { data } = await getAllProducts();\r\n      setProducts(data.data);\r\n    } catch (error) {\r\n      toast.error(\"something went wrong to get all products\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n    console.log(products);\r\n  }\r\n  const addProductHandler = async (product, images) => {\r\n    console.log(product);\r\n    const newProduct = await addNewProduct(product);\r\n    console.log(newProduct);\r\n    await addNewProductImages(newProduct.data.product._id, images);\r\n    toast.success(\"Product added successfully !!!\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    // history.push('/');\r\n    // window.location = '/';\r\n  }\r\n  const createSubCategoryHandler = async (data) => {\r\n    const allCates = [...categories];\r\n    const targetIndex = allCates.findIndex(cate => cate.category === data.parent);\r\n    allCates[targetIndex].subCategories.push(data);\r\n    //  for (let i = 0; i < allCates[targetIndex].subCategories.length; i++) {\r\n    //    const sub = allCates[targetIndex].subCategories[i];\r\n    //    if(sub.name===data.name){\r\n\r\n    //     return alert('already existed')\r\n    //      }\r\n    //  }\r\n    // console.log({requiredSubCates});\r\n    // allCates[targetIndex].subCategories = requiredSubCates;\r\n    console.log({ categories });\r\n    console.log({ allCates });\r\n    setCategories(allCates);\r\n    createSubCategory(data);\r\n    // getAllCategoriesHandler();\r\n  }\r\n  const deleteSubCategoryHandler = async (data) => {\r\n    const allCates = [...categories];\r\n    const targetIndex = allCates.findIndex(cate => cate.category === data.category);\r\n    const requiredSubCates = allCates[targetIndex].subCategories.filter(sub => sub.name !== data.subCategory);\r\n    console.log({ requiredSubCates });\r\n    allCates[targetIndex].subCategories = requiredSubCates;\r\n    console.log({ cate: categories[targetIndex].subCategories });\r\n    console.log({ all: allCates[targetIndex].subCategories });\r\n    setCategories(allCates);\r\n    deleteSubCategory(data);\r\n    // getAllCategoriesHandler();\r\n  }\r\n\r\n\r\n  const deleteProductHandler = async (id) => {\r\n    try {\r\n      const { data } = await deleteProduct(id);\r\n      const remainProd = [...products];\r\n      setProducts(remainProd.filter(pro => pro._id !== id));\r\n      toast.success(\"Product successfully deleted\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"something went wrong to get all products\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n    console.log({ products });\r\n  }\r\n\r\n  const resetPasswordHandler = async (values) => {\r\n    const { password, confirmPassword, token } = values;\r\n    console.log(values);\r\n    try {\r\n      await resetPassword({ password, confirmPassword }, token);\r\n      toast.success(\" Password Reset Successfully !!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      setTimeout(() => {\r\n        toast.success(\" Login with New Password !!\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        history.push(\"/login\");\r\n      }, 1500);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Invalid token !!!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, loginHandler }}>\r\n      <CategoryContext.Provider value={{ categories, deleteSubCategoryHandler, createSubCategoryHandler }}>\r\n        <div class=\"wrapper\">\r\n          <ToastContainer style={{ width: \"322px\" }} />\r\n          {/* {user &&  <SideNavBar /> } */}\r\n          <SideNavBar />\r\n          <div class=\"main\">\r\n            {/* {user &&  <NavBar /> } */}\r\n            <NavBar />\r\n            <Switch>\r\n              {/* <Route exact path=\"/\" component={Home} /> */}\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={(props) => user ? <Home /> : <Login onLogin={loginHandler} />\r\n                }\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/addProduct\"\r\n                render={(props) => <AddProduct addProduct={addProductHandler} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/basket\"\r\n                render={(props) => <Baskets />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/showProduct\"\r\n                render={(props) => <ShowProducts\r\n                  deleteProduct={deleteProductHandler}\r\n                  products={products}\r\n                  {...props}\r\n                />}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/reviews\"\r\n                render={(props) => <Reviews />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/editProduct\"\r\n                render={(props) => <EditProduct {...props} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/login\"\r\n                render={(props) => <Login onLogin={loginHandler} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/resetPassword/:token\"\r\n                render={(props) => (\r\n                  <ResetPassword onResetPassword={resetPasswordHandler} {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/forgot\"\r\n                render={(props) => (\r\n                  <Forgot onForgot={forgotHandler} {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/updatePassword\"\r\n                render={(props) => (\r\n                  <UpdatePassword  {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/customers\"\r\n                render={(props) => (\r\n                  <Customers  {...props} />\r\n                )}\r\n              /> <Route\r\n                exact\r\n                path=\"/addUser\"\r\n                render={(props) => (\r\n                  <AddUser  {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/orders\"\r\n                render={(props) => <Orders {...props} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/transactions\"\r\n                render={(props) => <Transaction />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/orderDetail\"\r\n                render={(props) => <OrderDetail />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/staff\"\r\n                render={(props) => <Staff />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/categories\"\r\n                render={(props) => <Categories />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/profile\"\r\n                render={(props) => <Profile />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"*\"\r\n                render={(props) => <NotFound />}\r\n              />\r\n            </Switch>\r\n          </div>\r\n\r\n        </div>\r\n      </CategoryContext.Provider>\r\n    </UserContext.Provider>\r\n\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as actions from \"../api\";\r\n\r\nconst api =\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    if (action.type !== actions.apiCallBegan.type) return next(action);\r\n    const {\r\n      url,\r\n      method,\r\n      data,\r\n      onStart,\r\n      onSuccess,\r\n      onError,\r\n      successMessage,\r\n      errorMessage,\r\n    } = action.payload;\r\n    console.log({ name: action.payload });\r\n    if (onStart) dispatch({ type: onStart });\r\n    next(action);\r\n    try {\r\n      let response;\r\n      if (url === \"/order/addOrder\") {\r\n        response = await axios.request({\r\n          baseURL: `${process.env.REACT_APP_URL}/api/v1`,\r\n          url,\r\n          method,\r\n          data: { data: data.order, user: data.user },\r\n        });\r\n        const { _id, total } = response.data.data;\r\n        data.payment.price = (total / 164) * 100;\r\n        response = await axios.request({\r\n          baseURL: `${process.env.REACT_APP_URL}/api/v1`,\r\n          url: \"/order/payment\",\r\n          method,\r\n          data: { data: data.payment, id: _id },\r\n        });\r\n      } else {\r\n        response = await axios.request({\r\n          baseURL: `${process.env.REACT_APP_URL}/api/v1`,\r\n          url,\r\n          method,\r\n          data,\r\n        });\r\n      }\r\n      if (method === \"post\" || method === \"patch\") {\r\n        toast.success(successMessage, {\r\n          position: \"top-center\",\r\n          closeOnClick: true,\r\n        });\r\n        window.scrollTo(0, 0);\r\n      }\r\n      console.log({ cust: response.data });\r\n      dispatch(actions.apiCallSuccess(response.data.data)); //apiCallSuccess created in actions by action creator\r\n      if (onSuccess) dispatch({ type: onSuccess, payload: response.data.data });\r\n    } catch (error) {\r\n      if (errorMessage)\r\n        toast.error(errorMessage, {\r\n          position: \"top-center\",\r\n          closeOnClick: true,\r\n        });\r\n      dispatch(actions.apiCallFailed(error.message));\r\n      if (onError) dispatch({ type: onError, payload: error.message });\r\n    }\r\n  };\r\n\r\nexport default api;\r\n","const logger = (param) => (store) => (next) => (action) => {\r\n  console.log('Logging', param);\r\n  // console.log('next', next);\r\n  // console.log('action', action);\r\n  next(action);\r\n};\r\n\r\nexport default logger;\r\n","const toast = (state) => (next) => (action) => {\r\n  if (action?.type === 'error') alert('Toastify:', action?.payload?.message);\r\n  else next(action);\r\n};\r\n\r\nexport default toast;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { createSelector } from 'reselect';\r\nimport { apiCallBegan } from '../api';\r\n\r\nconst slice = createSlice({\r\n  name: 'reviews',\r\n  initialState: {\r\n    list: [],\r\n    productReviews:[],\r\n    loading: false,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    reviewsRequested: (reviews, action) => {\r\n      reviews.loading = true;\r\n    },\r\n    reviewsReceived: (reviews, action) => {\r\n      reviews.list = action.payload;\r\n      reviews.loading = false;\r\n      reviews.lastFetch = Date.now();\r\n    },\r\n    reviewsRequestFailed: (reviews, action) => {\r\n      reviews.loading = false;\r\n    },\r\n    reviewAdded: (reviews, action) => {\r\n      reviews.list.push(action.payload);\r\n    },\r\n    productReviewsAdded: (reviews, action) => {\r\n      reviews.productReviews=reviews.list.filter(rev=>rev.product._id===action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nconst {\r\n  reviewsReceived,\r\n  reviewAdded,\r\n  reviewsRequested,\r\n  reviewsRequestFailed,\r\n productReviewsAdded\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\n\r\nexport const loadReviews = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.reviews;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), 'minutes');\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url:\"review/allReviews\",\r\n      onStart: reviewsRequested.type,\r\n      onSuccess: reviewsReceived.type,\r\n      onError: reviewsRequestFailed.type,\r\n    })\r\n  );\r\n};\r\nexport const getAllReviews = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.reviews;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), 'minutes');\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url:\"review/allReviews\",\r\n      onStart: reviewsRequested.type,\r\n      onSuccess: reviewsReceived.type,\r\n      onError: reviewsRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addReview = (review) =>(dispatch, getState) =>{\r\n  dispatch(apiCallBegan({\r\n    url:\"review/addReview\",\r\n    method: 'post',\r\n    data: review,\r\n    message:\"Thanks Your Review added successfully !!!\",\r\n    onSuccess: reviewAdded.type,\r\n    onError: reviewsRequestFailed.type,\r\n  }));\r\n}\r\n  \r\n\r\nexport const addProductsReviews = (id) =>(dispatch, getState) =>{\r\n  dispatch(productReviewsAdded(id));\r\n};\r\n// export const resolvereview = (id) =>\r\n//   apiCallBegan({\r\n//     url: `${url}/${id}`,\r\n//     method: 'patch',\r\n//     data: { resolved: true },\r\n//     onSuccess: reviewResolved.type,\r\n//   });\r\n\r\n// Selector\r\nexport const getAllReviewsSelector = createSelector(\r\n  (state) => state.entities.reviews.list,\r\n  (list) => list \r\n);\r\n\r\nexport const getProductReviewsSelector = createSelector(\r\n  (state) => state.entities.reviews.productsReviews,\r\n  (list) => list \r\n);","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"../api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    list: [\r\n      // { estimatedProcessingTime , selectedVariants, customWriting   , customDate ,qty,product }\r\n    ],\r\n    numberOfItems:0,\r\n    subtotal: 0,\r\n    shipping:null,\r\n    bucket: null,\r\n    checkout: false,\r\n    payment:null,\r\n    loading: false,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    itemAdded: (cart, action) => {\r\n      // cart.subtotal+= action.payload.product.price*action.payload.qty;\r\n      cart.numberOfItems+=1;\r\n      cart.subtotal += action.payload.product.price;\r\n      cart.list.push(action.payload);\r\n    },\r\n    cartRequested: (cart, action) => {\r\n      cart.loading = true;\r\n    },\r\n    cartReceived: (cart, action) => {\r\n      cart.list = action.payload;\r\n      cart.loading = false;\r\n      cart.lastFetch = Date.now();\r\n    },\r\n    cartRequestFailed: (cart, action) => {\r\n      cart.loading = false;\r\n    },\r\n    quantityChanged: (cart, action) => {\r\n      const { id, qty } = action.payload;\r\n      const index = cart.list.findIndex((item) => item.product.id === id);\r\n      cart.list[index].qty = qty;\r\n      cart.subtotal = cart.list.reduce(function (acc, obj) {\r\n        return acc + obj.qty * obj.product.price;\r\n      }, 0);\r\n      if(cart.bucket) cart.subtotal+=cart.bucket.price*1;\r\n    },\r\n    itemRemoved: (cart, action) => {\r\n      const { id } = action.payload;\r\n      cart.numberOfItems-=1;\r\n      cart.list=cart.list.filter((item) => item.product.id !== id);\r\n      cart.subtotal = cart.list.reduce(function (acc, obj) {\r\n        return acc + obj.qty * obj.product.price;\r\n      }, 0);\r\n    },\r\n    bucketAdded: (cart, action) => {\r\n      const {_id,image,price,title}=action.payload;\r\n      if (cart.bucket&&cart.subtotal>0) cart.subtotal-=(cart.bucket.price*1);\r\n      cart.subtotal+=(action.payload.price*1);\r\n      cart.bucket={_id,image,price,title};\r\n    },\r\n    shippingAdded: (cart, action) => {\r\n      cart.shipping=action.payload;\r\n    },\r\n    paymentAdded: (cart, action) => {\r\n      cart.payment=action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst {\r\n  cartReceived,\r\n  itemAssignedToUser,\r\n  itemAdded,\r\n  quantityChanged,\r\n  itemRemoved,\r\n  bucketAdded,\r\n  shippingAdded,\r\n  paymentAdded,\r\n  cartRequested,\r\n  cartRequestFailed,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\nconst url = \"/cart\";\r\n\r\nexport const addItem = (item) => (dispatch, getState) => {\r\n  dispatch(itemAdded(item));\r\n};\r\n\r\nexport const changeQuantity = (id, qty) => (dispatch, getState) => {\r\n  dispatch(quantityChanged({ id, qty }));\r\n};\r\n\r\nexport const removeItem = (id) => (dispatch, getState) => {\r\n  dispatch(itemRemoved({ id }));\r\n};\r\n\r\nexport const addBucket = (bucket) => (dispatch, getState) => {\r\n  console.log(bucket);\r\n  dispatch(bucketAdded( bucket ));\r\n};\r\nexport const addShipping = (shipping) => (dispatch, getState) => {\r\n  dispatch(shippingAdded( shipping ));\r\n};\r\nexport const addPayment = (payment) => (dispatch, getState) => {\r\n  dispatch(paymentAdded( payment ));\r\n};\r\n\r\nexport const loadCart = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.cart;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url,\r\n      onStart: cartRequested.type,\r\n      onSuccess: cartReceived.type,\r\n      onError: cartRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\n\r\nexport const assignitemToUser = (itemId, userId) =>\r\n  apiCallBegan({\r\n    url: `${url}/${itemId}`,\r\n    method: \"patch\",\r\n    data: { userId },\r\n    onSuccess: itemAssignedToUser.type,\r\n  });\r\n\r\n// Selector\r\nexport const getCart = createSelector(\r\n  (state) => state.entities.cart,\r\n  (cart) => cart\r\n);\r\nexport const getNumberOfCartItems= createSelector(\r\n  (state) => state.entities.cart.numberOfItems,\r\n  (numberOfItems) =>numberOfItems \r\n);\r\nexport const getSelectedBucket = createSelector(\r\n  (state) => state.entities.cart.bucket,\r\n  (bucket) => bucket\r\n);\r\n\r\nexport const getCartByUser = (userId) =>\r\n  createSelector(\r\n    (state) => state.entities.cart.list,\r\n    (cart) => cart.filter((item) => item.userId === userId)\r\n  );\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { createSelector } from 'reselect';\r\nimport { apiCallBegan } from '../api';\r\n\r\nconst slice = createSlice({\r\n  name: 'categories',\r\n  initialState: {\r\n    list: [],\r\n    selected:null,\r\n    loading: false,\r\n    lastFetch: null,\r\n  },\r\n\r\n  reducers: {\r\n    categoriesRequested: (categories, action) => {\r\n      categories.loading = true;\r\n    },\r\n    categoriesReceived: (categories, action) => {\r\n      categories.list = action.payload;\r\n      categories.loading = false;\r\n      categories.lastFetch = Date.now();\r\n    },\r\n    categoriesRequestFailed: (categories, action) => {\r\n      categories.loading = false;\r\n    },\r\n    categoryAdded: (categories, action) => {\r\n      categories.list.push(action.payload);\r\n    },\r\n    categorySated: (categories, action) => {\r\n      categories.selected=action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst {\r\n  categoriesReceived,\r\n  categorySated,\r\n  categoryAdded,\r\n  categoriesRequested,\r\n  categoriesRequestFailed,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\n\r\nexport const loadCategories = () => (dispatch, getState) => {\r\n  console.log({test:getState().entities});\r\n  const { lastFetch } = getState().entities.categories;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), 'minutes');\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url:\"category/allCategories\",\r\n      onStart: categoriesRequested.type,\r\n      onSuccess: categoriesReceived.type,\r\n      onError: categoriesRequestFailed.type,\r\n    })\r\n  );\r\n};\r\nexport const getAllCategories = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.categories;\r\n  const diffInMinutes = moment().diff(moment(lastFetch), 'minutes');\r\n  if (diffInMinutes < 10) return;\r\n  dispatch(\r\n    apiCallBegan({\r\n      url:\"category/allCategories\",\r\n      onStart: categoriesRequested.type,\r\n      onSuccess: categoriesReceived.type,\r\n      onError: categoriesRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const setCategory = (category) => (dispatch, getState) => {\r\ndispatch(categorySated(category));\r\n};\r\n\r\nexport const addCategory = (category) =>(dispatch, getState) =>{\r\n  dispatch(apiCallBegan({\r\n    url:\"category/addCategory\",\r\n    method: 'post',\r\n    data: category,\r\n    message:\"Thanks Your category added successfully !!!\",\r\n    onSuccess: categoryAdded.type,\r\n    onError: categoriesRequestFailed.type,\r\n  }));\r\n}\r\n  \r\n\r\n// export const resolveCategory = (id) =>\r\n//   apiCallBegan({\r\n//     url: `${url}/${id}`,\r\n//     method: 'patch',\r\n//     data: { resolved: true },\r\n//     onSuccess: categoryResolved.type,\r\n//   });\r\n\r\n// Selector\r\nexport const getAllCategoriesSelector = createSelector(\r\n  (state) => state.entities.categories.list,\r\n  (list) => list \r\n);\r\n\r\nexport const getSelectedCategorySelector = createSelector(\r\n  (state) => state.entities.categories.selected,\r\n  (selected) => selected \r\n);\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport products from \"./reducers/products\";\r\nimport reviews from \"./reducers/reviews\";\r\nimport cart from \"./reducers/cart\";\r\nimport orders from \"./reducers/order\";\r\nimport categories from \"./reducers/categories\";\r\nimport user from \"./reducers/user\";\r\nimport customers from \"./reducers/customers\";\r\nimport staff from \"./reducers/staff\";\r\nexport default combineReducers({\r\n  products,\r\n  reviews,\r\n  cart,\r\n  orders,\r\n  categories,\r\n  user,\r\n  customers,\r\n  staff,\r\n  // projects: projectsReducer,\r\n  // users: usersReducer,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport entitiesReducer from './entities';\r\n\r\nexport default combineReducers({\r\n  entities: entitiesReducer,\r\n});\r\n","import Main from './components/Main'\nimport { Provider } from 'react-redux';\nimport storeConfigure from './storemini/configureStore';\nconst store=storeConfigure();\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Main/>\n    </Provider>\n  );\n}\nexport default App;\n\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport api from './middleware/api';\r\nimport logger from './middleware/logger';\r\nimport toast from './middleware/toastify';\r\nimport reducer from './reducer';\r\n\r\nexport default   function storeConfigure () {\r\n  return configureStore({\r\n    reducer,\r\n    middleware: [\r\n      ...getDefaultMiddleware(),\r\n      logger({ destination: 'console' }),\r\n      toast,\r\n      api,\r\n    ],\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './components/styles/index.css';\r\n\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}